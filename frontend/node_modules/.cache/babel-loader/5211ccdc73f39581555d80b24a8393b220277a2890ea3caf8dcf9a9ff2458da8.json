{"ast":null,"code":"import{createContext,useState,useContext,useEffect}from'react';import jwt_decode from'jwt-decode';import api from'../utils/api';import{useNotification}from'./NotificationContext';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const notification=useNotification();const showNotification=(message,severity)=>{if(notification!==null&&notification!==void 0&&notification.showNotification){notification.showNotification(message,severity);}else{console.log(`${severity}: ${message}`);}};useEffect(()=>{const initializeAuth=async()=>{try{const token=localStorage.getItem('token');if(token){const decoded=jwt_decode(token);if(decoded.exp*1000<Date.now()){localStorage.removeItem('token');setUser(null);}else{await loadUser();}}}catch(error){console.error('Auth initialization error:',error);localStorage.removeItem('token');setUser(null);}finally{setLoading(false);}};initializeAuth();},[]);const loadUser=async()=>{try{const response=await api.get('/auth/me');setUser(response.data);}catch(error){console.error('Load user error:',error);localStorage.removeItem('token');setUser(null);}};const register=async userData=>{try{const res=await api.post('/auth/register',userData);if(res.data.token){localStorage.setItem('token',res.data.token);setUser(res.data.user);showNotification('Registration successful!','success');return res.data;}}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Registration failed';showNotification(message,'error');throw new Error(message);}};const login=async(fullName,password)=>{try{const res=await api.post('/auth/login',{fullName,password});if(res.data.token){localStorage.setItem('token',res.data.token);setUser(res.data.user);showNotification('Login successful!','success');return res.data;}}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Login failed';showNotification(message,'error');throw new Error(message);}};const logout=()=>{localStorage.removeItem('token');setUser(null);showNotification('Logged out successfully','success');};const updateProfile=async userData=>{try{const res=await api.put('/users/profile',userData);setUser(res.data);showNotification('Profile updated successfully','success');return res.data;}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Profile update failed';showNotification(message,'error');throw new Error(message);}};const verifyEmail=async token=>{try{const res=await api.post('/auth/verify-email',{token});showNotification('Email verified successfully','success');return res.data;}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Email verification failed';showNotification(message,'error');throw new Error(message);}};const forgotPassword=async email=>{try{await api.post('/auth/forgot-password',{email});showNotification('Password reset email sent','success');}catch(error){var _error$response5,_error$response5$data;const message=((_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.error)||'Failed to send reset email';showNotification(message,'error');throw new Error(message);}};const resetPassword=async(token,password)=>{try{await api.post('/auth/reset-password',{token,password});showNotification('Password reset successful','success');}catch(error){var _error$response6,_error$response6$data;const message=((_error$response6=error.response)===null||_error$response6===void 0?void 0:(_error$response6$data=_error$response6.data)===null||_error$response6$data===void 0?void 0:_error$response6$data.error)||'Password reset failed';showNotification(message,'error');throw new Error(message);}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,loading,register,login,logout,updateProfile,verifyEmail,forgotPassword,resetPassword},children:!loading&&children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["createContext","useState","useContext","useEffect","jwt_decode","api","useNotification","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","notification","showNotification","message","severity","console","log","initializeAuth","token","localStorage","getItem","decoded","exp","Date","now","removeItem","loadUser","error","response","get","data","register","userData","res","post","setItem","_error$response","_error$response$data","Error","login","fullName","password","_error$response2","_error$response2$data","logout","updateProfile","put","_error$response3","_error$response3$data","verifyEmail","_error$response4","_error$response4$data","forgotPassword","email","_error$response5","_error$response5$data","resetPassword","_error$response6","_error$response6$data","Provider","value","useAuth","context"],"sources":["C:/Users/tuyizere dieudonne/SOCIALRISE X1/SOCIALRISE X/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect } from 'react';\r\nimport jwt_decode from 'jwt-decode';\r\nimport api from '../utils/api';\r\nimport { useNotification } from './NotificationContext';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const notification = useNotification();\r\n\r\n  const showNotification = (message, severity) => {\r\n    if (notification?.showNotification) {\r\n      notification.showNotification(message, severity);\r\n    } else {\r\n      console.log(`${severity}: ${message}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          const decoded = jwt_decode(token);\r\n          if (decoded.exp * 1000 < Date.now()) {\r\n            localStorage.removeItem('token');\r\n            setUser(null);\r\n          } else {\r\n            await loadUser();\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth initialization error:', error);\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const loadUser = async () => {\r\n    try {\r\n      const response = await api.get('/auth/me');\r\n      setUser(response.data);\r\n    } catch (error) {\r\n      console.error('Load user error:', error);\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const res = await api.post('/auth/register', userData);\r\n      \r\n      if (res.data.token) {\r\n        localStorage.setItem('token', res.data.token);\r\n        setUser(res.data.user);\r\n        showNotification('Registration successful!', 'success');\r\n        return res.data;\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Registration failed';\r\n      showNotification(message, 'error');\r\n      throw new Error(message);\r\n    }\r\n  };\r\n\r\n  const login = async (fullName, password) => {\r\n    try {\r\n      const res = await api.post('/auth/login', { fullName, password });\r\n      \r\n      if (res.data.token) {\r\n        localStorage.setItem('token', res.data.token);\r\n        setUser(res.data.user);\r\n        showNotification('Login successful!', 'success');\r\n        return res.data;\r\n      }\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      showNotification(message, 'error');\r\n      throw new Error(message);\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    showNotification('Logged out successfully', 'success');\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const res = await api.put('/users/profile', userData);\r\n      setUser(res.data);\r\n      showNotification('Profile updated successfully', 'success');\r\n      return res.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Profile update failed';\r\n      showNotification(message, 'error');\r\n      throw new Error(message);\r\n    }\r\n  };\r\n\r\n  const verifyEmail = async (token) => {\r\n    try {\r\n      const res = await api.post('/auth/verify-email', { token });\r\n      showNotification('Email verified successfully', 'success');\r\n      return res.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Email verification failed';\r\n      showNotification(message, 'error');\r\n      throw new Error(message);\r\n    }\r\n  };\r\n\r\n  const forgotPassword = async (email) => {\r\n    try {\r\n      await api.post('/auth/forgot-password', { email });\r\n      showNotification('Password reset email sent', 'success');\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to send reset email';\r\n      showNotification(message, 'error');\r\n      throw new Error(message);\r\n    }\r\n  };\r\n\r\n  const resetPassword = async (token, password) => {\r\n    try {\r\n      await api.post('/auth/reset-password', { token, password });\r\n      showNotification('Password reset successful', 'success');\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Password reset failed';\r\n      showNotification(message, 'error');\r\n      throw new Error(message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        register,\r\n        login,\r\n        logout,\r\n        updateProfile,\r\n        verifyEmail,\r\n        forgotPassword,\r\n        resetPassword\r\n      }}\r\n    >\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}