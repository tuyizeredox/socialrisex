{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tuyizere dieudonne\\\\SOCIALRISE X1\\\\SOCIALRISE X\\\\frontend\\\\src\\\\pages\\\\user\\\\Videos.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Container, Grid, Card, CardMedia, CardContent, CardActions, Typography, Button, Box, Chip, CircularProgress, Alert, LinearProgress } from '@mui/material';\nimport { PlayCircle, MonetizationOn, Person, Timer, CheckCircle } from '@mui/icons-material';\nimport api from '../../utils/api';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNotification } from '../../context/NotificationContext';\nimport PageHeader from '../../components/common/PageHeader';\nimport VideoPlayer from '../../components/VideoPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Videos() {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const {\n    user\n  } = useAuth();\n  const {\n    showNotification\n  } = useNotification();\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n  const fetchVideos = async () => {\n    try {\n      const response = await api.get('/videos/available');\n      if (response.data && Array.isArray(response.data)) {\n        setVideos(response.data);\n      } else {\n        throw new Error('Invalid response format');\n      }\n    } catch (err) {\n      setError('Failed to load videos');\n      showNotification('Failed to load videos', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleWatchVideo = video => {\n    if (!user.isActive) {\n      showNotification('Please activate your account to watch videos', 'warning');\n      return;\n    }\n    setSelectedVideo(video);\n  };\n  const handleVideoComplete = async () => {\n    try {\n      const response = await api.post(`/videos/${selectedVideo._id}/complete`, {\n        watchTime: selectedVideo.minimumWatchTime\n      });\n\n      // Update the videos list to mark the completed video as watched\n      setVideos(prevVideos => prevVideos.map(video => video._id === selectedVideo._id ? {\n        ...video,\n        watched: true\n      } : video));\n\n      // Show different messages based on whether points were earned\n      if (response.data.pointsEarned > 0) {\n        showNotification(`Congratulations! You earned ${response.data.pointsEarned} points!`, 'success');\n      } else {\n        showNotification('Video watched successfully!', 'success');\n      }\n      setSelectedVideo(null);\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2;\n      showNotification(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to record video completion', 'error');\n      // Don't close the video player on error\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) !== 400) {\n        setSelectedVideo(null);\n      }\n    }\n  };\n\n  // Update the render method to show watched status\n  const renderVideoCard = video => /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"180\",\n        image: `https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`,\n        alt: video.title,\n        sx: {\n          cursor: 'pointer'\n        },\n        onClick: () => handleWatchVideo(video)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), isVideoCompleted(video) && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: 10,\n          right: 10,\n          bgcolor: 'success.main',\n          color: 'white',\n          borderRadius: '50%',\n          p: 0.5\n        },\n        children: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        flexGrow: 1\n      },\n      children: [renderVideoStatus(video), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        component: \"div\",\n        noWrap: true,\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 1,\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          sx: {\n            mr: 1,\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [\"Min. watch time: \", video.minimumWatchTime, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(MonetizationOn, {\n          sx: {\n            mr: 1,\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [video.pointsReward, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: video.watched ? /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 19\n        }, this),\n        label: \"Completed\",\n        color: \"success\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(PlayCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 24\n        }, this),\n        variant: \"contained\",\n        onClick: () => handleWatchVideo(video),\n        disabled: !user.isActive,\n        children: \"Watch Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n  const extractVideoId = url => {\n    try {\n      const urlObj = new URL(url);\n      if (urlObj.hostname.includes('youtube.com')) {\n        return urlObj.searchParams.get('v');\n      } else if (urlObj.hostname.includes('youtu.be')) {\n        return urlObj.pathname.slice(1);\n      }\n    } catch (error) {\n      console.error('Error extracting video ID:', error);\n    }\n    return null;\n  };\n  const isVideoCompleted = video => {\n    var _video$watchedBy;\n    return (_video$watchedBy = video.watchedBy) === null || _video$watchedBy === void 0 ? void 0 : _video$watchedBy.some(watch => watch.user === user._id && watch.completedAt);\n  };\n  const renderVideoStatus = video => {\n    if (isVideoCompleted(video)) {\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }, this),\n        label: \"Completed\",\n        color: \"success\",\n        size: \"small\",\n        sx: {\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Available Videos\",\n      subtitle: \"Watch videos to earn points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), !user.isActive && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mb: 3\n      },\n      children: \"Activate your account to start earning points from watching videos.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [videos.map(video => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"180\",\n              image: `https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`,\n              alt: video.title,\n              sx: {\n                cursor: 'pointer'\n              },\n              onClick: () => handleWatchVideo(video)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), isVideoCompleted(video) && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                position: 'absolute',\n                top: 10,\n                right: 10,\n                bgcolor: 'success.main',\n                color: 'white',\n                borderRadius: '50%',\n                p: 0.5\n              },\n              children: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              flexGrow: 1\n            },\n            children: [renderVideoStatus(video), /*#__PURE__*/_jsxDEV(Typography, {\n              gutterBottom: true,\n              variant: \"h6\",\n              component: \"div\",\n              noWrap: true,\n              children: video.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 1,\n              children: [/*#__PURE__*/_jsxDEV(Timer, {\n                sx: {\n                  mr: 1,\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Min. watch time: \", video.minimumWatchTime, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(MonetizationOn, {\n                sx: {\n                  mr: 1,\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [video.pointsReward, \" points\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: isVideoCompleted(video) ? \"outlined\" : \"contained\",\n              startIcon: isVideoCompleted(video) ? /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 56\n              }, this) : /*#__PURE__*/_jsxDEV(PlayCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 74\n              }, this),\n              onClick: () => handleWatchVideo(video),\n              disabled: !user.isActive,\n              color: isVideoCompleted(video) ? \"success\" : \"primary\",\n              children: isVideoCompleted(video) ? 'Watch Again' : 'Watch & Earn'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, video._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)), videos.length === 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          py: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"text.secondary\",\n            children: \"No videos available at the moment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Please check back later for new videos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), selectedVideo && /*#__PURE__*/_jsxDEV(VideoPlayer, {\n      videoId: extractVideoId(selectedVideo.youtubeUrl),\n      minimumWatchTime: selectedVideo.minimumWatchTime,\n      onComplete: handleVideoComplete,\n      onClose: () => setSelectedVideo(null),\n      title: selectedVideo.title,\n      isCompleted: isVideoCompleted(selectedVideo)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"WPSSqzBuXFeSnktAlLQ8aOFxVdw=\", false, function () {\n  return [useAuth, useNotification];\n});\n_c = Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["useState","useEffect","Container","Grid","Card","CardMedia","CardContent","CardActions","Typography","Button","Box","Chip","CircularProgress","Alert","LinearProgress","PlayCircle","MonetizationOn","Person","Timer","CheckCircle","api","useAuth","useNotification","PageHeader","VideoPlayer","jsxDEV","_jsxDEV","Videos","_s","videos","setVideos","loading","setLoading","error","setError","selectedVideo","setSelectedVideo","user","showNotification","fetchVideos","response","get","data","Array","isArray","Error","err","handleWatchVideo","video","isActive","handleVideoComplete","post","_id","watchTime","minimumWatchTime","prevVideos","map","watched","pointsEarned","_err$response","_err$response$data","_err$response2","message","status","renderVideoCard","children","sx","position","component","height","image","extractVideoId","youtubeUrl","alt","title","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isVideoCompleted","top","right","bgcolor","color","borderRadius","p","flexGrow","renderVideoStatus","gutterBottom","variant","noWrap","display","alignItems","mb","mr","fontSize","pointsReward","icon","label","size","startIcon","disabled","url","urlObj","URL","hostname","includes","searchParams","pathname","slice","console","_video$watchedBy","watchedBy","some","watch","completedAt","justifyContent","minHeight","severity","mt","subtitle","container","spacing","item","xs","sm","md","flexDirection","fullWidth","length","textAlign","py","videoId","onComplete","onClose","isCompleted","_c","$RefreshReg$"],"sources":["C:/Users/tuyizere dieudonne/SOCIALRISE X1/SOCIALRISE X/frontend/src/pages/user/Videos.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  Chip,\r\n  CircularProgress,\r\n  Alert,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport {\r\n  PlayCircle,\r\n  MonetizationOn,\r\n  Person,\r\n  Timer,\r\n  CheckCircle\r\n} from '@mui/icons-material';\r\nimport api from '../../utils/api';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useNotification } from '../../context/NotificationContext';\r\nimport PageHeader from '../../components/common/PageHeader';\r\nimport VideoPlayer from '../../components/VideoPlayer';\r\n\r\nexport default function Videos() {\r\n  const [videos, setVideos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const { user } = useAuth();\r\n  const { showNotification } = useNotification();\r\n\r\n  useEffect(() => {\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  const fetchVideos = async () => {\r\n    try {\r\n      const response = await api.get('/videos/available');\r\n      if (response.data && Array.isArray(response.data)) {\r\n        setVideos(response.data);\r\n      } else {\r\n        throw new Error('Invalid response format');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to load videos');\r\n      showNotification('Failed to load videos', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWatchVideo = (video) => {\r\n    if (!user.isActive) {\r\n      showNotification('Please activate your account to watch videos', 'warning');\r\n      return;\r\n    }\r\n    setSelectedVideo(video);\r\n  };\r\n\r\n  const handleVideoComplete = async () => {\r\n    try {\r\n      const response = await api.post(`/videos/${selectedVideo._id}/complete`, {\r\n        watchTime: selectedVideo.minimumWatchTime\r\n      });\r\n      \r\n      // Update the videos list to mark the completed video as watched\r\n      setVideos(prevVideos => \r\n        prevVideos.map(video => \r\n          video._id === selectedVideo._id \r\n            ? { ...video, watched: true }\r\n            : video\r\n        )\r\n      );\r\n      \r\n      // Show different messages based on whether points were earned\r\n      if (response.data.pointsEarned > 0) {\r\n        showNotification(\r\n          `Congratulations! You earned ${response.data.pointsEarned} points!`, \r\n          'success'\r\n        );\r\n      } else {\r\n        showNotification('Video watched successfully!', 'success');\r\n      }\r\n      \r\n      setSelectedVideo(null);\r\n    } catch (err) {\r\n      showNotification(\r\n        err.response?.data?.message || 'Failed to record video completion', \r\n        'error'\r\n      );\r\n      // Don't close the video player on error\r\n      if (err.response?.status !== 400) {\r\n        setSelectedVideo(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Update the render method to show watched status\r\n  const renderVideoCard = (video) => (\r\n    <Card>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"180\"\r\n          image={`https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`}\r\n          alt={video.title}\r\n          sx={{ cursor: 'pointer' }}\r\n          onClick={() => handleWatchVideo(video)}\r\n        />\r\n        {isVideoCompleted(video) && (\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 10,\r\n              right: 10,\r\n              bgcolor: 'success.main',\r\n              color: 'white',\r\n              borderRadius: '50%',\r\n              p: 0.5\r\n            }}\r\n          >\r\n            <CheckCircle />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <CardContent sx={{ flexGrow: 1 }}>\r\n        {renderVideoStatus(video)}\r\n        <Typography gutterBottom variant=\"h6\" component=\"div\" noWrap>\r\n          {video.title}\r\n        </Typography>\r\n        <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n          <Timer sx={{ mr: 1, fontSize: 20 }} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Min. watch time: {video.minimumWatchTime}s\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <MonetizationOn sx={{ mr: 1, fontSize: 20 }} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {video.pointsReward} points\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {video.watched ? (\r\n          <Chip\r\n            icon={<CheckCircle />}\r\n            label=\"Completed\"\r\n            color=\"success\"\r\n            size=\"small\"\r\n          />\r\n        ) : (\r\n          <Button\r\n            startIcon={<PlayCircle />}\r\n            variant=\"contained\"\r\n            onClick={() => handleWatchVideo(video)}\r\n            disabled={!user.isActive}\r\n          >\r\n            Watch Video\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n  const extractVideoId = (url) => {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      if (urlObj.hostname.includes('youtube.com')) {\r\n        return urlObj.searchParams.get('v');\r\n      } else if (urlObj.hostname.includes('youtu.be')) {\r\n        return urlObj.pathname.slice(1);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error extracting video ID:', error);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const isVideoCompleted = (video) => {\r\n    return video.watchedBy?.some(watch => \r\n      watch.user === user._id && watch.completedAt\r\n    );\r\n  };\r\n\r\n  const renderVideoStatus = (video) => {\r\n    if (isVideoCompleted(video)) {\r\n      return (\r\n        <Chip\r\n          icon={<CheckCircle />}\r\n          label=\"Completed\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          sx={{ mb: 1 }}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container>\r\n        <Alert severity=\"error\" sx={{ mt: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <PageHeader \r\n        title=\"Available Videos\" \r\n        subtitle=\"Watch videos to earn points\"\r\n      />\r\n\r\n      {!user.isActive && (\r\n        <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n          Activate your account to start earning points from watching videos.\r\n        </Alert>\r\n      )}\r\n\r\n      <Grid container spacing={3}>\r\n        {videos.map((video) => (\r\n          <Grid item xs={12} sm={6} md={4} key={video._id}>\r\n            <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n              <Box sx={{ position: 'relative' }}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  height=\"180\"\r\n                  image={`https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`}\r\n                  alt={video.title}\r\n                  sx={{ cursor: 'pointer' }}\r\n                  onClick={() => handleWatchVideo(video)}\r\n                />\r\n                {isVideoCompleted(video) && (\r\n                  <Box\r\n                    sx={{\r\n                      position: 'absolute',\r\n                      top: 10,\r\n                      right: 10,\r\n                      bgcolor: 'success.main',\r\n                      color: 'white',\r\n                      borderRadius: '50%',\r\n                      p: 0.5\r\n                    }}\r\n                  >\r\n                    <CheckCircle />\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n              <CardContent sx={{ flexGrow: 1 }}>\r\n                {renderVideoStatus(video)}\r\n                <Typography gutterBottom variant=\"h6\" component=\"div\" noWrap>\r\n                  {video.title}\r\n                </Typography>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                  <Timer sx={{ mr: 1, fontSize: 20 }} />\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Min. watch time: {video.minimumWatchTime}s\r\n                  </Typography>\r\n                </Box>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <MonetizationOn sx={{ mr: 1, fontSize: 20 }} />\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {video.pointsReward} points\r\n                  </Typography>\r\n                </Box>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  fullWidth\r\n                  variant={isVideoCompleted(video) ? \"outlined\" : \"contained\"}\r\n                  startIcon={isVideoCompleted(video) ? <CheckCircle /> : <PlayCircle />}\r\n                  onClick={() => handleWatchVideo(video)}\r\n                  disabled={!user.isActive}\r\n                  color={isVideoCompleted(video) ? \"success\" : \"primary\"}\r\n                >\r\n                  {isVideoCompleted(video) ? 'Watch Again' : 'Watch & Earn'}\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n\r\n        {videos.length === 0 && (\r\n          <Grid item xs={12}>\r\n            <Box textAlign=\"center\" py={4}>\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                No videos available at the moment\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                Please check back later for new videos\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n\r\n      {selectedVideo && (\r\n        <VideoPlayer\r\n          videoId={extractVideoId(selectedVideo.youtubeUrl)}\r\n          minimumWatchTime={selectedVideo.minimumWatchTime}\r\n          onComplete={handleVideoComplete}\r\n          onClose={() => setSelectedVideo(null)}\r\n          title={selectedVideo.title}\r\n          isCompleted={isVideoCompleted(selectedVideo)}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}