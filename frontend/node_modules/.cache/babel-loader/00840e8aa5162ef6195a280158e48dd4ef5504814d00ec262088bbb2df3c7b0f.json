{"ast":null,"code":"import{useState,useEffect}from'react';import{Container,Paper,Typography,Box,Button,TextField,Grid,Card,CardContent,CardActions,IconButton,Dialog,DialogTitle,DialogContent,DialogActions,CircularProgress,Switch,FormControlLabel}from'@mui/material';import{Add as AddIcon,Delete as DeleteIcon,Edit as EditIcon,VideoLibrary}from'@mui/icons-material';import api from'../../utils/api';import PageHeader from'../../components/common/PageHeader';import FormField from'../../components/common/FormField';import EmptyState from'../../components/common/EmptyState';import{useNotification}from'../../context/NotificationContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function VideoManagement(){const[videos,setVideos]=useState([]);const[loading,setLoading]=useState(true);const[openDialog,setOpenDialog]=useState(false);const[editingVideo,setEditingVideo]=useState(null);const[formData,setFormData]=useState({title:'',youtubeUrl:'',pointsReward:1000,minimumWatchTime:60,isActive:true});const[selectedVideo,setSelectedVideo]=useState(null);const{showNotification}=useNotification();const fetchVideos=async()=>{try{setLoading(true);const response=await api.get('/admin/videos');if(response.data&&response.data.videos){setVideos(response.data.videos);}else{setVideos([]);}}catch(error){showNotification(error.message||'Failed to fetch videos','error');setVideos([]);}finally{setLoading(false);}};useEffect(()=>{fetchVideos();},[]);const handleOpenDialog=function(){let video=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(video){setEditingVideo(video);setFormData({title:video.title,youtubeUrl:video.youtubeUrl,pointsReward:video.pointsReward,minimumWatchTime:video.minimumWatchTime,isActive:video.isActive});}else{setEditingVideo(null);setFormData({title:'',youtubeUrl:'',pointsReward:1000,minimumWatchTime:60,isActive:true});}setOpenDialog(true);};const handleCloseDialog=()=>{setOpenDialog(false);setEditingVideo(null);};const handleSubmit=async e=>{e.preventDefault();try{if(!formData.title||!formData.youtubeUrl){showNotification('Please fill in all required fields','error');return;}try{new URL(formData.youtubeUrl);}catch(error){showNotification('Please enter a valid YouTube URL','error');return;}if(editingVideo){await api.put(`/admin/videos/${editingVideo._id}`,formData);showNotification('Video updated successfully','success');}else{await api.post('/admin/videos',formData);showNotification('Video added successfully','success');}fetchVideos();handleCloseDialog();}catch(error){var _error$response,_error$response$data;showNotification(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||'Error saving video','error');}};const handleDeleteVideo=async videoId=>{if(window.confirm('Are you sure you want to delete this video?')){try{await api.delete(`/admin/videos/${videoId}`);showNotification('Video deleted successfully','success');fetchVideos();}catch(error){showNotification(error.message||'Error deleting video','error');}}};const handleToggleStatus=async(videoId,currentStatus)=>{try{await api.put(`/admin/videos/${videoId}`,{isActive:!currentStatus});showNotification('Video status updated successfully','success');fetchVideos();}catch(error){showNotification(error.message||'Error updating video status','error');}};const handleWatchVideo=video=>{setSelectedVideo(video);};const handleVideoComplete=async()=>{try{await api.post(`/videos/${selectedVideo._id}/complete`,{watchTime:selectedVideo.minimumWatchTime});showNotification(`Congratulations! You earned ${selectedVideo.pointsReward} points!`,'success');setSelectedVideo(null);fetchVideos();}catch(err){var _err$response,_err$response$data;showNotification(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Failed to record video completion','error');}};if(loading){return/*#__PURE__*/_jsx(Box,{display:\"flex\",justifyContent:\"center\",alignItems:\"center\",minHeight:\"400px\",children:/*#__PURE__*/_jsx(CircularProgress,{})});}return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",children:[/*#__PURE__*/_jsx(PageHeader,{title:\"Video Management\",breadcrumbs:[{label:'Dashboard',path:'/admin'},{label:'Videos',path:'/admin/videos'}],action:/*#__PURE__*/_jsx(Button,{variant:\"contained\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:()=>handleOpenDialog(),children:\"Add Video\"})}),videos.length===0?/*#__PURE__*/_jsx(EmptyState,{icon:VideoLibrary,title:\"No Videos Found\",description:\"Add your first video to get started\",action:()=>handleOpenDialog(),actionText:\"Add Video\"}):/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:Array.isArray(videos)&&videos.map(video=>/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:video.title}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",paragraph:true,children:[\"Points: \",video.pointsReward]}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"text.secondary\",children:[\"Min. Watch Time: \",video.minimumWatchTime,\"s\"]}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:video.isActive,onChange:()=>handleToggleStatus(video._id,video.isActive)}),label:video.isActive?'Active':'Inactive'})]}),/*#__PURE__*/_jsxs(CardActions,{children:[/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleOpenDialog(video),children:/*#__PURE__*/_jsx(EditIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:()=>handleDeleteVideo(video._id),children:/*#__PURE__*/_jsx(DeleteIcon,{})})]})]})},video._id))}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:handleCloseDialog,maxWidth:\"sm\",fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:editingVideo?'Edit Video':'Add New Video'}),/*#__PURE__*/_jsx(DialogContent,{children:/*#__PURE__*/_jsxs(Box,{component:\"form\",onSubmit:handleSubmit,sx:{mt:2},children:[/*#__PURE__*/_jsx(FormField,{label:\"Title\",name:\"title\",value:formData.title,onChange:e=>setFormData({...formData,title:e.target.value}),required:true,fullWidth:true,margin:\"normal\"}),/*#__PURE__*/_jsx(FormField,{label:\"YouTube URL\",name:\"youtubeUrl\",value:formData.youtubeUrl,onChange:e=>setFormData({...formData,youtubeUrl:e.target.value}),required:true,fullWidth:true,margin:\"normal\",helperText:\"Enter the full YouTube video URL (e.g., https://www.youtube.com/watch?v=...)\"}),/*#__PURE__*/_jsx(FormField,{label:\"Points Reward\",name:\"pointsReward\",type:\"number\",value:formData.pointsReward,onChange:e=>setFormData({...formData,pointsReward:parseInt(e.target.value)}),required:true,fullWidth:true,margin:\"normal\",inputProps:{min:0}}),/*#__PURE__*/_jsx(FormField,{label:\"Minimum Watch Time (seconds)\",name:\"minimumWatchTime\",type:\"number\",value:formData.minimumWatchTime,onChange:e=>setFormData({...formData,minimumWatchTime:parseInt(e.target.value)}),required:true,fullWidth:true,margin:\"normal\",inputProps:{min:0}})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleCloseDialog,children:\"Cancel\"}),/*#__PURE__*/_jsxs(Button,{onClick:handleSubmit,variant:\"contained\",children:[editingVideo?'Update':'Add',\" Video\"]})]})]})]});}","map":{"version":3,"names":["useState","useEffect","Container","Paper","Typography","Box","Button","TextField","Grid","Card","CardContent","CardActions","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","CircularProgress","Switch","FormControlLabel","Add","AddIcon","Delete","DeleteIcon","Edit","EditIcon","VideoLibrary","api","PageHeader","FormField","EmptyState","useNotification","jsx","_jsx","jsxs","_jsxs","VideoManagement","videos","setVideos","loading","setLoading","openDialog","setOpenDialog","editingVideo","setEditingVideo","formData","setFormData","title","youtubeUrl","pointsReward","minimumWatchTime","isActive","selectedVideo","setSelectedVideo","showNotification","fetchVideos","response","get","data","error","message","handleOpenDialog","video","arguments","length","undefined","handleCloseDialog","handleSubmit","e","preventDefault","URL","put","_id","post","_error$response","_error$response$data","handleDeleteVideo","videoId","window","confirm","delete","handleToggleStatus","currentStatus","handleWatchVideo","handleVideoComplete","watchTime","err","_err$response","_err$response$data","display","justifyContent","alignItems","minHeight","children","maxWidth","breadcrumbs","label","path","action","variant","startIcon","onClick","icon","description","actionText","container","spacing","Array","isArray","map","item","xs","sm","md","gutterBottom","color","paragraph","control","checked","onChange","open","onClose","fullWidth","component","onSubmit","sx","mt","name","value","target","required","margin","helperText","type","parseInt","inputProps","min"],"sources":["C:/Users/tuyizere dieudonne/SOCIALRISE X1/SOCIALRISE X/frontend/src/pages/admin/VideoManagement.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  CircularProgress,\r\n  Switch,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport {\r\n  Add as AddIcon,\r\n  Delete as DeleteIcon,\r\n  Edit as EditIcon,\r\n  VideoLibrary\r\n} from '@mui/icons-material';\r\nimport api from '../../utils/api';\r\nimport PageHeader from '../../components/common/PageHeader';\r\nimport FormField from '../../components/common/FormField';\r\nimport EmptyState from '../../components/common/EmptyState';\r\nimport { useNotification } from '../../context/NotificationContext';\r\n\r\nexport default function VideoManagement() {\r\n  const [videos, setVideos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [editingVideo, setEditingVideo] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    youtubeUrl: '',\r\n    pointsReward: 1000,\r\n    minimumWatchTime: 60,\r\n    isActive: true\r\n  });\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n\r\n  const { showNotification } = useNotification();\r\n\r\n  const fetchVideos = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get('/admin/videos');\r\n      if (response.data && response.data.videos) {\r\n        setVideos(response.data.videos);\r\n      } else {\r\n        setVideos([]);\r\n      }\r\n    } catch (error) {\r\n      showNotification(error.message || 'Failed to fetch videos', 'error');\r\n      setVideos([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  const handleOpenDialog = (video = null) => {\r\n    if (video) {\r\n      setEditingVideo(video);\r\n      setFormData({\r\n        title: video.title,\r\n        youtubeUrl: video.youtubeUrl,\r\n        pointsReward: video.pointsReward,\r\n        minimumWatchTime: video.minimumWatchTime,\r\n        isActive: video.isActive\r\n      });\r\n    } else {\r\n      setEditingVideo(null);\r\n      setFormData({\r\n        title: '',\r\n        youtubeUrl: '',\r\n        pointsReward: 1000,\r\n        minimumWatchTime: 60,\r\n        isActive: true\r\n      });\r\n    }\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n    setEditingVideo(null);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (!formData.title || !formData.youtubeUrl) {\r\n        showNotification('Please fill in all required fields', 'error');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        new URL(formData.youtubeUrl);\r\n      } catch (error) {\r\n        showNotification('Please enter a valid YouTube URL', 'error');\r\n        return;\r\n      }\r\n\r\n      if (editingVideo) {\r\n        await api.put(`/admin/videos/${editingVideo._id}`, formData);\r\n        showNotification('Video updated successfully', 'success');\r\n      } else {\r\n        await api.post('/admin/videos', formData);\r\n        showNotification('Video added successfully', 'success');\r\n      }\r\n      fetchVideos();\r\n      handleCloseDialog();\r\n    } catch (error) {\r\n      showNotification(error.response?.data?.message || 'Error saving video', 'error');\r\n    }\r\n  };\r\n\r\n  const handleDeleteVideo = async (videoId) => {\r\n    if (window.confirm('Are you sure you want to delete this video?')) {\r\n      try {\r\n        await api.delete(`/admin/videos/${videoId}`);\r\n        showNotification('Video deleted successfully', 'success');\r\n        fetchVideos();\r\n      } catch (error) {\r\n        showNotification(error.message || 'Error deleting video', 'error');\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleStatus = async (videoId, currentStatus) => {\r\n    try {\r\n      await api.put(`/admin/videos/${videoId}`, { isActive: !currentStatus });\r\n      showNotification('Video status updated successfully', 'success');\r\n      fetchVideos();\r\n    } catch (error) {\r\n      showNotification(error.message || 'Error updating video status', 'error');\r\n    }\r\n  };\r\n\r\n  const handleWatchVideo = (video) => {\r\n    setSelectedVideo(video);\r\n  };\r\n\r\n  const handleVideoComplete = async () => {\r\n    try {\r\n      await api.post(`/videos/${selectedVideo._id}/complete`, {\r\n        watchTime: selectedVideo.minimumWatchTime\r\n      });\r\n      showNotification(`Congratulations! You earned ${selectedVideo.pointsReward} points!`, 'success');\r\n      setSelectedVideo(null);\r\n      fetchVideos();\r\n    } catch (err) {\r\n      showNotification(err.response?.data?.message || 'Failed to record video completion', 'error');\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <PageHeader\r\n        title=\"Video Management\"\r\n        breadcrumbs={[\r\n          { label: 'Dashboard', path: '/admin' },\r\n          { label: 'Videos', path: '/admin/videos' }\r\n        ]}\r\n        action={\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() => handleOpenDialog()}\r\n          >\r\n            Add Video\r\n          </Button>\r\n        }\r\n      />\r\n\r\n      {videos.length === 0 ? (\r\n        <EmptyState\r\n          icon={VideoLibrary}\r\n          title=\"No Videos Found\"\r\n          description=\"Add your first video to get started\"\r\n          action={() => handleOpenDialog()}\r\n          actionText=\"Add Video\"\r\n        />\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {Array.isArray(videos) && videos.map((video) => (\r\n            <Grid item xs={12} sm={6} md={4} key={video._id}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    {video.title}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n                    Points: {video.pointsReward}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Min. Watch Time: {video.minimumWatchTime}s\r\n                  </Typography>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={video.isActive}\r\n                        onChange={() => handleToggleStatus(video._id, video.isActive)}\r\n                      />\r\n                    }\r\n                    label={video.isActive ? 'Active' : 'Inactive'}\r\n                  />\r\n                </CardContent>\r\n                <CardActions>\r\n                  <IconButton onClick={() => handleOpenDialog(video)}>\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                  <IconButton onClick={() => handleDeleteVideo(video._id)}>\r\n                    <DeleteIcon />\r\n                  </IconButton>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n\r\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {editingVideo ? 'Edit Video' : 'Add New Video'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\r\n            <FormField\r\n              label=\"Title\"\r\n              name=\"title\"\r\n              value={formData.title}\r\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n              required\r\n              fullWidth\r\n              margin=\"normal\"\r\n            />\r\n            <FormField\r\n              label=\"YouTube URL\"\r\n              name=\"youtubeUrl\"\r\n              value={formData.youtubeUrl}\r\n              onChange={(e) => setFormData({ ...formData, youtubeUrl: e.target.value })}\r\n              required\r\n              fullWidth\r\n              margin=\"normal\"\r\n              helperText=\"Enter the full YouTube video URL (e.g., https://www.youtube.com/watch?v=...)\"\r\n            />\r\n            <FormField\r\n              label=\"Points Reward\"\r\n              name=\"pointsReward\"\r\n              type=\"number\"\r\n              value={formData.pointsReward}\r\n              onChange={(e) => setFormData({ ...formData, pointsReward: parseInt(e.target.value) })}\r\n              required\r\n              fullWidth\r\n              margin=\"normal\"\r\n              inputProps={{ min: 0 }}\r\n            />\r\n            <FormField\r\n              label=\"Minimum Watch Time (seconds)\"\r\n              name=\"minimumWatchTime\"\r\n              type=\"number\"\r\n              value={formData.minimumWatchTime}\r\n              onChange={(e) => setFormData({ ...formData, minimumWatchTime: parseInt(e.target.value) })}\r\n              required\r\n              fullWidth\r\n              margin=\"normal\"\r\n              inputProps={{ min: 0 }}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>Cancel</Button>\r\n          <Button onClick={handleSubmit} variant=\"contained\">\r\n            {editingVideo ? 'Update' : 'Add'} Video\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}