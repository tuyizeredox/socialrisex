{"ast":null,"code":"import{Navigate,useLocation}from'react-router-dom';import{useAuth}from'../../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{children}=_ref;const{user}=useAuth();const location=useLocation();if(!user){// Redirect them to the login page if not authenticated\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}// If user is not activated and not already on the activate page, redirect to activate\nif(!user.isActive&&location.pathname!=='/app/activate'){return/*#__PURE__*/_jsx(Navigate,{to:\"/app/activate\"});}return children;};export default PrivateRoute;","map":{"version":3,"names":["Navigate","useLocation","useAuth","jsx","_jsx","PrivateRoute","_ref","children","user","location","to","isActive","pathname"],"sources":["C:/Users/tuyizere dieudonne/SOCIALRISE X1/SOCIALRISE X/frontend/src/components/routing/PrivateRoute.js"],"sourcesContent":["import { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const { user } = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (!user) {\r\n    // Redirect them to the login page if not authenticated\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // If user is not activated and not already on the activate page, redirect to activate\r\n  if (!user.isActive && location.pathname !== '/app/activate') {\r\n    return <Navigate to=\"/app/activate\" />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute; "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,OAAO,KAAQ,2BAA2B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpD,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAChC,KAAM,CAAEE,IAAK,CAAC,CAAGN,OAAO,CAAC,CAAC,CAC1B,KAAM,CAAAO,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAE9B,GAAI,CAACO,IAAI,CAAE,CACT;AACA,mBAAOJ,IAAA,CAACJ,QAAQ,EAACU,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA;AACA,GAAI,CAACF,IAAI,CAACG,QAAQ,EAAIF,QAAQ,CAACG,QAAQ,GAAK,eAAe,CAAE,CAC3D,mBAAOR,IAAA,CAACJ,QAAQ,EAACU,EAAE,CAAC,eAAe,CAAE,CAAC,CACxC,CAEA,MAAO,CAAAH,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}