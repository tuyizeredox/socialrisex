{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tuyizere dieudonne\\\\SOCIALRISE X1\\\\SOCIALRISE X\\\\frontend\\\\src\\\\components\\\\VideoPlayer\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from 'react';\nimport { Box, Dialog, DialogContent, DialogTitle, IconButton, Typography, LinearProgress, CircularProgress, Chip } from '@mui/material';\nimport { Close as CloseIcon, CheckCircle } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = ({\n  videoId,\n  onComplete,\n  minimumWatchTime,\n  onClose,\n  title,\n  isCompleted\n}) => {\n  _s();\n  const [watchTime, setWatchTime] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const playerRef = useRef(null);\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    // Initialize YouTube API only once\n    const initYouTubeAPI = () => {\n      return new Promise(resolve => {\n        if (window.YT && window.YT.Player) {\n          resolve();\n        } else {\n          const tag = document.createElement('script');\n          tag.src = 'https://www.youtube.com/iframe_api';\n          tag.async = true;\n          const firstScriptTag = document.getElementsByTagName('script')[0];\n          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n          window.onYouTubeIframeAPIReady = () => {\n            resolve();\n          };\n        }\n      });\n    };\n    const setupPlayer = async () => {\n      try {\n        await initYouTubeAPI();\n        if (playerRef.current) {\n          playerRef.current.destroy();\n        }\n        playerRef.current = new window.YT.Player('youtube-player', {\n          videoId,\n          playerVars: {\n            autoplay: 1,\n            controls: 1,\n            modestbranding: 1,\n            rel: 0,\n            fs: 1,\n            playsinline: 1,\n            origin: window.location.origin\n          },\n          events: {\n            onReady: () => {\n              setLoading(false);\n              playerRef.current.playVideo();\n            },\n            onStateChange: handlePlayerStateChange,\n            onError: error => {\n              console.error('YouTube Player Error:', error);\n              setLoading(false);\n            }\n          }\n        });\n      } catch (error) {\n        console.error('Error setting up YouTube player:', error);\n        setLoading(false);\n      }\n    };\n    setupPlayer();\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      if (playerRef.current) {\n        playerRef.current.destroy();\n      }\n    };\n  }, [videoId]);\n  const handlePlayerStateChange = event => {\n    if (event.data === window.YT.PlayerState.PLAYING) {\n      // Clear existing interval if any\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n\n      // Start tracking watch time\n      intervalRef.current = setInterval(() => {\n        setWatchTime(prev => {\n          const newTime = prev + 1;\n          if (newTime >= minimumWatchTime) {\n            clearInterval(intervalRef.current);\n            onComplete();\n          }\n          return newTime;\n        });\n      }, 1000);\n    } else if (event.data === window.YT.PlayerState.PAUSED || event.data === window.YT.PlayerState.ENDED) {\n      // Stop tracking watch time\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    }\n  };\n  const progress = Math.min(watchTime / minimumWatchTime * 100, 100);\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: true,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    PaperProps: {\n      sx: {\n        backgroundColor: '#000',\n        color: '#fff'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      sx: {\n        m: 0,\n        p: 2,\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        bgcolor: 'background.paper'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: title || 'Watch Video'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), isCompleted && /*#__PURE__*/_jsxDEV(Chip, {\n          icon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this),\n          label: \"Completed\",\n          color: \"success\",\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        \"aria-label\": \"close\",\n        onClick: onClose,\n        sx: {\n          color: 'text.primary'\n        },\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      sx: {\n        p: 0,\n        bgcolor: '#000'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'relative',\n          paddingTop: '56.25%',\n          // 16:9 Aspect Ratio\n          bgcolor: '#000',\n          '& iframe': {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            border: 'none'\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"youtube-player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            bgcolor: 'rgba(0, 0, 0, 0.7)'\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          p: 2,\n          bgcolor: 'background.paper'\n        },\n        children: [isCompleted ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"success.main\",\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            fontSize: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), \"You have already completed this video\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: [\"Watch Progress: \", Math.round(progress), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n            variant: \"determinate\",\n            value: progress,\n            sx: {\n              height: 8,\n              borderRadius: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          sx: {\n            mt: 1,\n            display: 'block'\n          },\n          children: [\"Minimum watch time required: \", minimumWatchTime, \" seconds\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"xONqwUeUVYSCgSWT49xn6p7WRYU=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["useState","useEffect","useRef","Box","Dialog","DialogContent","DialogTitle","IconButton","Typography","LinearProgress","CircularProgress","Chip","Close","CloseIcon","CheckCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoPlayer","videoId","onComplete","minimumWatchTime","onClose","title","isCompleted","_s","watchTime","setWatchTime","loading","setLoading","playerRef","intervalRef","initYouTubeAPI","Promise","resolve","window","YT","Player","tag","document","createElement","src","async","firstScriptTag","getElementsByTagName","parentNode","insertBefore","onYouTubeIframeAPIReady","setupPlayer","current","destroy","playerVars","autoplay","controls","modestbranding","rel","fs","playsinline","origin","location","events","onReady","playVideo","onStateChange","handlePlayerStateChange","onError","error","console","clearInterval","event","data","PlayerState","PLAYING","setInterval","prev","newTime","PAUSED","ENDED","progress","Math","min","open","maxWidth","fullWidth","PaperProps","sx","backgroundColor","color","children","m","p","display","justifyContent","alignItems","bgcolor","gap","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","icon","label","size","onClick","position","paddingTop","top","left","width","height","border","id","right","bottom","fontSize","gutterBottom","round","value","borderRadius","mt","_c","$RefreshReg$"],"sources":["C:/Users/tuyizere dieudonne/SOCIALRISE X1/SOCIALRISE X/frontend/src/components/VideoPlayer/index.js"],"sourcesContent":["import { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  Box, \r\n  Dialog, \r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Typography,\r\n  LinearProgress,\r\n  CircularProgress,\r\n  Chip\r\n} from '@mui/material';\r\nimport { Close as CloseIcon, CheckCircle } from '@mui/icons-material';\r\n\r\nconst VideoPlayer = ({ videoId, onComplete, minimumWatchTime, onClose, title, isCompleted }) => {\r\n  const [watchTime, setWatchTime] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const playerRef = useRef(null);\r\n  const intervalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize YouTube API only once\r\n    const initYouTubeAPI = () => {\r\n      return new Promise((resolve) => {\r\n        if (window.YT && window.YT.Player) {\r\n          resolve();\r\n        } else {\r\n          const tag = document.createElement('script');\r\n          tag.src = 'https://www.youtube.com/iframe_api';\r\n          tag.async = true;\r\n          const firstScriptTag = document.getElementsByTagName('script')[0];\r\n          firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n          window.onYouTubeIframeAPIReady = () => {\r\n            resolve();\r\n          };\r\n        }\r\n      });\r\n    };\r\n\r\n    const setupPlayer = async () => {\r\n      try {\r\n        await initYouTubeAPI();\r\n        if (playerRef.current) {\r\n          playerRef.current.destroy();\r\n        }\r\n\r\n        playerRef.current = new window.YT.Player('youtube-player', {\r\n          videoId,\r\n          playerVars: {\r\n            autoplay: 1,\r\n            controls: 1,\r\n            modestbranding: 1,\r\n            rel: 0,\r\n            fs: 1,\r\n            playsinline: 1,\r\n            origin: window.location.origin\r\n          },\r\n          events: {\r\n            onReady: () => {\r\n              setLoading(false);\r\n              playerRef.current.playVideo();\r\n            },\r\n            onStateChange: handlePlayerStateChange,\r\n            onError: (error) => {\r\n              console.error('YouTube Player Error:', error);\r\n              setLoading(false);\r\n            }\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error setting up YouTube player:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    setupPlayer();\r\n\r\n    return () => {\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n      if (playerRef.current) {\r\n        playerRef.current.destroy();\r\n      }\r\n    };\r\n  }, [videoId]);\r\n\r\n  const handlePlayerStateChange = (event) => {\r\n    if (event.data === window.YT.PlayerState.PLAYING) {\r\n      // Clear existing interval if any\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n      \r\n      // Start tracking watch time\r\n      intervalRef.current = setInterval(() => {\r\n        setWatchTime(prev => {\r\n          const newTime = prev + 1;\r\n          if (newTime >= minimumWatchTime) {\r\n            clearInterval(intervalRef.current);\r\n            onComplete();\r\n          }\r\n          return newTime;\r\n        });\r\n      }, 1000);\r\n    } else if (event.data === window.YT.PlayerState.PAUSED || \r\n               event.data === window.YT.PlayerState.ENDED) {\r\n      // Stop tracking watch time\r\n      if (intervalRef.current) {\r\n        clearInterval(intervalRef.current);\r\n      }\r\n    }\r\n  };\r\n\r\n  const progress = Math.min((watchTime / minimumWatchTime) * 100, 100);\r\n\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      onClose={onClose}\r\n      maxWidth=\"md\"\r\n      fullWidth\r\n      PaperProps={{\r\n        sx: {\r\n          backgroundColor: '#000',\r\n          color: '#fff'\r\n        }\r\n      }}\r\n    >\r\n      <DialogTitle sx={{ \r\n        m: 0, \r\n        p: 2, \r\n        display: 'flex', \r\n        justifyContent: 'space-between', \r\n        alignItems: 'center',\r\n        bgcolor: 'background.paper'\r\n      }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n          <Typography variant=\"h6\" component=\"div\">\r\n            {title || 'Watch Video'}\r\n          </Typography>\r\n          {isCompleted && (\r\n            <Chip\r\n              icon={<CheckCircle />}\r\n              label=\"Completed\"\r\n              color=\"success\"\r\n              size=\"small\"\r\n            />\r\n          )}\r\n        </Box>\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{ color: 'text.primary' }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n\r\n      <DialogContent sx={{ p: 0, bgcolor: '#000' }}>\r\n        <Box sx={{\r\n          position: 'relative',\r\n          paddingTop: '56.25%', // 16:9 Aspect Ratio\r\n          bgcolor: '#000',\r\n          '& iframe': {\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            border: 'none'\r\n          }\r\n        }}>\r\n          <div id=\"youtube-player\" />\r\n          {loading && (\r\n            <Box sx={{\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              bgcolor: 'rgba(0, 0, 0, 0.7)'\r\n            }}>\r\n              <CircularProgress color=\"primary\" />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n\r\n        <Box sx={{ \r\n          p: 2, \r\n          bgcolor: 'background.paper'\r\n        }}>\r\n          {isCompleted ? (\r\n            <Typography variant=\"body2\" color=\"success.main\" sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\r\n              <CheckCircle fontSize=\"small\" />\r\n              You have already completed this video\r\n            </Typography>\r\n          ) : (\r\n            <>\r\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                Watch Progress: {Math.round(progress)}%\r\n              </Typography>\r\n              <LinearProgress \r\n                variant=\"determinate\" \r\n                value={progress} \r\n                sx={{ height: 8, borderRadius: 1 }}\r\n              />\r\n            </>\r\n          )}\r\n          <Typography \r\n            variant=\"caption\" \r\n            color=\"text.secondary\" \r\n            sx={{ mt: 1, display: 'block' }}\r\n          >\r\n            Minimum watch time required: {minimumWatchTime} seconds\r\n          </Typography>\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}