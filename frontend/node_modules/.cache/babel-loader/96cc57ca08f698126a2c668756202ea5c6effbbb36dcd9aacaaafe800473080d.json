{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tuyizere dieudonne\\\\SOCIALRISE X1\\\\SOCIALRISE X\\\\frontend\\\\src\\\\pages\\\\user\\\\Videos.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Container, Grid, Card, CardMedia, CardContent, CardActions, Typography, Button, Box, Chip, CircularProgress, Alert, LinearProgress } from '@mui/material';\nimport { PlayCircle, MonetizationOn, Person, Timer, CheckCircle } from '@mui/icons-material';\nimport api from '../../utils/api';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNotification } from '../../context/NotificationContext';\nimport PageHeader from '../../components/common/PageHeader';\nimport VideoPlayer from '../../components/VideoPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Videos() {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const [filter, setFilter] = useState('all'); // Keep only this declaration\n  const {\n    user\n  } = useAuth();\n  const {\n    showNotification\n  } = useNotification();\n  // Add the fetchVideos function\n  const fetchVideos = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/videos');\n      if (response.data) {\n        setVideos(response.data);\n      }\n    } catch (err) {\n      setError('Failed to load videos');\n      showNotification('Failed to load videos', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n  // Define handleWatchVideo before it's used\n  const handleWatchVideo = video => {\n    if (!user.isActive) {\n      showNotification('Please activate your account to watch videos', 'warning');\n      return;\n    }\n    setSelectedVideo(video);\n  };\n  const handleVideoComplete = async () => {\n    try {\n      const response = await api.post(`/videos/${selectedVideo._id}/complete`, {\n        watchTime: selectedVideo.minimumWatchTime\n      });\n\n      // Update the videos list to mark the completed video as watched\n      setVideos(prevVideos => prevVideos.map(video => video._id === selectedVideo._id ? {\n        ...video,\n        watched: true,\n        completedAt: new Date()\n      } : video));\n      // Update the videos list\n      setVideos(prevVideos => prevVideos.map(video => video._id === selectedVideo._id ? {\n        ...video,\n        watched: true,\n        completedAt: new Date()\n      } : video));\n      // Dispatch event with points data\n      const videoCompletedEvent = new CustomEvent('videoCompleted', {\n        detail: {\n          pointsEarned: response.data.pointsEarned,\n          videoPoints: response.data.videoPoints || 0\n        }\n      });\n      window.dispatchEvent(videoCompletedEvent);\n      if (response.data.pointsEarned > 0) {\n        showNotification(`Congratulations! You earned ${response.data.pointsEarned} points!`, 'success');\n      }\n      setSelectedVideo(null);\n    } catch (err) {\n      console.error('Video completion error:', err);\n      showNotification('Failed to record video completion. Please try again.', 'error');\n    }\n  };\n  // Keep this single implementation of isVideoCompleted\n  const isVideoCompleted = video => {\n    var _video$watchedBy;\n    return video.watched || Boolean(video.completedAt) || ((_video$watchedBy = video.watchedBy) === null || _video$watchedBy === void 0 ? void 0 : _video$watchedBy.some(watch => watch.user === user._id && watch.completedAt));\n  };\n  // Remove the second declaration of isVideoCompleted that appears later in the code\n\n  // Update the render method to show watched status\n  const renderVideoCard = video => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"180\",\n        image: `https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`,\n        alt: video.title,\n        sx: {\n          cursor: 'pointer'\n        },\n        onClick: () => handleWatchVideo(video)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), isVideoCompleted(video) && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: 10,\n          right: 10,\n          bgcolor: 'success.main',\n          color: 'white',\n          borderRadius: '50%',\n          p: 0.5\n        },\n        children: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        flexGrow: 1\n      },\n      children: [renderVideoStatus(video), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        component: \"div\",\n        noWrap: true,\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 1,\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          sx: {\n            mr: 1,\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [\"Min. watch time: \", video.minimumWatchTime, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(MonetizationOn, {\n          sx: {\n            mr: 1,\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [video.pointsReward, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: video.watched ? /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 19\n        }, this),\n        label: \"Completed\",\n        color: \"success\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(PlayCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 24\n        }, this),\n        variant: \"contained\",\n        onClick: () => handleWatchVideo(video),\n        disabled: !user.isActive,\n        children: \"Watch Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n  const extractVideoId = url => {\n    try {\n      const urlObj = new URL(url);\n      if (urlObj.hostname.includes('youtube.com')) {\n        return urlObj.searchParams.get('v');\n      } else if (urlObj.hostname.includes('youtu.be')) {\n        return urlObj.pathname.slice(1);\n      }\n    } catch (error) {\n      console.error('Error extracting video ID:', error);\n    }\n    return null;\n  };\n  const renderVideoStatus = video => {\n    if (isVideoCompleted(video)) {\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this),\n        label: \"Completed\",\n        color: \"success\",\n        size: \"small\",\n        sx: {\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  }\n  // Remove this duplicate declaration\n  // const [filter, setFilter] = useState('all');\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Available Videos\",\n      subtitle: \"Watch videos to earn points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), !user.isActive && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mb: 3\n      },\n      children: \"Activate your account to start earning points from watching videos.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: filter === 'all' ? 'contained' : 'outlined',\n        onClick: () => setFilter('all'),\n        children: \"All Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: filter === 'unwatched' ? 'contained' : 'outlined',\n        onClick: () => setFilter('unwatched'),\n        startIcon: /*#__PURE__*/_jsxDEV(PlayCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 22\n        }, this),\n        children: \"Unwatched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: filter === 'watched' ? 'contained' : 'outlined',\n        onClick: () => setFilter('watched'),\n        startIcon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 22\n        }, this),\n        color: \"success\",\n        children: \"Watched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [videos.filter(video => {\n        if (filter === 'watched') return isVideoCompleted(video);\n        if (filter === 'unwatched') return !isVideoCompleted(video);\n        return true;\n      }).map(video => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            opacity: isVideoCompleted(video) ? 0.8 : 1,\n            bgcolor: isVideoCompleted(video) ? 'action.hover' : 'background.paper',\n            position: 'relative',\n            '&::after': isVideoCompleted(video) ? {\n              content: '\"\"',\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              borderRadius: 1,\n              border: '2px solid',\n              borderColor: 'success.main',\n              pointerEvents: 'none'\n            } : {}\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"180\",\n              image: `https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`,\n              alt: video.title,\n              sx: {\n                cursor: 'pointer',\n                filter: isVideoCompleted(video) ? 'grayscale(0.3)' : 'none'\n              },\n              onClick: () => handleWatchVideo(video)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 19\n            }, this), isVideoCompleted(video) && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                position: 'absolute',\n                top: 10,\n                right: 10,\n                bgcolor: 'success.main',\n                color: 'white',\n                borderRadius: '50%',\n                p: 0.5,\n                boxShadow: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 1,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"div\",\n                noWrap: true,\n                sx: {\n                  flex: 1,\n                  color: isVideoCompleted(video) ? 'text.secondary' : 'text.primary'\n                },\n                children: video.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 1,\n              children: [/*#__PURE__*/_jsxDEV(Timer, {\n                sx: {\n                  mr: 1,\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Min. watch time: \", video.minimumWatchTime, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(MonetizationOn, {\n                sx: {\n                  mr: 1,\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: isVideoCompleted(video) ? \"text.secondary\" : \"success.main\",\n                sx: {\n                  fontWeight: isVideoCompleted(video) ? 'normal' : 'bold'\n                },\n                children: isVideoCompleted(video) ? 'Points Earned' : `${video.pointsReward} points`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: isVideoCompleted(video) ? \"outlined\" : \"contained\",\n              startIcon: isVideoCompleted(video) ? /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 58\n              }, this) : /*#__PURE__*/_jsxDEV(PlayCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 76\n              }, this),\n              onClick: () => handleWatchVideo(video),\n              disabled: !user.isActive,\n              color: isVideoCompleted(video) ? \"success\" : \"primary\",\n              children: isVideoCompleted(video) ? 'Watch Again' : 'Watch & Earn'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 15\n        }, this)\n      }, video._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 13\n      }, this)), videos.filter(video => {\n        if (filter === 'watched') return isVideoCompleted(video);\n        if (filter === 'unwatched') return !isVideoCompleted(video);\n        return true;\n      }).length === 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          py: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"text.secondary\",\n            children: filter === 'all' ? 'No videos available at the moment' : filter === 'watched' ? 'You haven\\'t watched any videos yet' : 'No new videos to watch'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: filter === 'all' ? 'Please check back later for new videos' : filter === 'watched' ? 'Start watching videos to earn points' : 'You\\'ve watched all available videos'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }, this), selectedVideo && /*#__PURE__*/_jsxDEV(VideoPlayer, {\n      videoId: extractVideoId(selectedVideo.youtubeUrl),\n      minimumWatchTime: selectedVideo.minimumWatchTime,\n      onComplete: handleVideoComplete,\n      onClose: () => setSelectedVideo(null),\n      title: selectedVideo.title,\n      isCompleted: isVideoCompleted(selectedVideo)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"jYukuOGw0mMn4A/T9vbMApIz7J4=\", false, function () {\n  return [useAuth, useNotification];\n});\n_c = Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["useState","useEffect","Container","Grid","Card","CardMedia","CardContent","CardActions","Typography","Button","Box","Chip","CircularProgress","Alert","LinearProgress","PlayCircle","MonetizationOn","Person","Timer","CheckCircle","api","useAuth","useNotification","PageHeader","VideoPlayer","jsxDEV","_jsxDEV","Videos","_s","videos","setVideos","loading","setLoading","error","setError","selectedVideo","setSelectedVideo","filter","setFilter","user","showNotification","fetchVideos","response","get","data","err","handleWatchVideo","video","isActive","handleVideoComplete","post","_id","watchTime","minimumWatchTime","prevVideos","map","watched","completedAt","Date","videoCompletedEvent","CustomEvent","detail","pointsEarned","videoPoints","window","dispatchEvent","console","isVideoCompleted","_video$watchedBy","Boolean","watchedBy","some","watch","renderVideoCard","sx","height","display","flexDirection","children","position","component","image","extractVideoId","youtubeUrl","alt","title","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","top","right","bgcolor","color","borderRadius","p","flexGrow","renderVideoStatus","gutterBottom","variant","noWrap","alignItems","mb","mr","fontSize","pointsReward","icon","label","size","startIcon","disabled","url","urlObj","URL","hostname","includes","searchParams","pathname","slice","justifyContent","minHeight","severity","mt","subtitle","gap","container","spacing","item","xs","sm","md","opacity","content","left","bottom","border","borderColor","pointerEvents","boxShadow","flex","fontWeight","fullWidth","length","textAlign","py","videoId","onComplete","onClose","isCompleted","_c","$RefreshReg$"],"sources":["C:/Users/tuyizere dieudonne/SOCIALRISE X1/SOCIALRISE X/frontend/src/pages/user/Videos.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  Chip,\r\n  CircularProgress,\r\n  Alert,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport {\r\n  PlayCircle,\r\n  MonetizationOn,\r\n  Person,\r\n  Timer,\r\n  CheckCircle\r\n} from '@mui/icons-material';\r\nimport api from '../../utils/api';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useNotification } from '../../context/NotificationContext';\r\nimport PageHeader from '../../components/common/PageHeader';\r\nimport VideoPlayer from '../../components/VideoPlayer';\r\n\r\nexport default function Videos() {\r\n  const [videos, setVideos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const [filter, setFilter] = useState('all'); // Keep only this declaration\r\n  const { user } = useAuth();\r\n  const { showNotification } = useNotification();\r\n  // Add the fetchVideos function\r\n  const fetchVideos = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await api.get('/videos');\r\n      if (response.data) {\r\n        setVideos(response.data);\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to load videos');\r\n      showNotification('Failed to load videos', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchVideos();\r\n  }, []);\r\n  // Define handleWatchVideo before it's used\r\n  const handleWatchVideo = (video) => {\r\n    if (!user.isActive) {\r\n      showNotification('Please activate your account to watch videos', 'warning');\r\n      return;\r\n    }\r\n    setSelectedVideo(video);\r\n  };\r\n  const handleVideoComplete = async () => {\r\n    try {\r\n      const response = await api.post(`/videos/${selectedVideo._id}/complete`, {\r\n        watchTime: selectedVideo.minimumWatchTime\r\n      });\r\n      \r\n      // Update the videos list to mark the completed video as watched\r\n      setVideos(prevVideos => \r\n        prevVideos.map(video => \r\n          video._id === selectedVideo._id \r\n            ? { \r\n                ...video, \r\n                watched: true,\r\n                completedAt: new Date()\r\n              }\r\n            : video\r\n        )\r\n      );\r\n    // Update the videos list\r\n    setVideos(prevVideos => \r\n      prevVideos.map(video => \r\n        video._id === selectedVideo._id \r\n          ? { \r\n              ...video, \r\n              watched: true,\r\n              completedAt: new Date()\r\n            }\r\n          : video\r\n      )\r\n    );\r\n    // Dispatch event with points data\r\n    const videoCompletedEvent = new CustomEvent('videoCompleted', {\r\n      detail: {\r\n        pointsEarned: response.data.pointsEarned,\r\n        videoPoints: response.data.videoPoints || 0\r\n      }\r\n    });\r\n    window.dispatchEvent(videoCompletedEvent);\r\n\r\n    if (response.data.pointsEarned > 0) {\r\n      showNotification(\r\n        `Congratulations! You earned ${response.data.pointsEarned} points!`, \r\n        'success'\r\n      );\r\n    }\r\n    \r\n    setSelectedVideo(null);\r\n  } catch (err) {\r\n    console.error('Video completion error:', err);\r\n    showNotification(\r\n      'Failed to record video completion. Please try again.', \r\n      'error'\r\n    );\r\n  }\r\n};\r\n  // Keep this single implementation of isVideoCompleted\r\n  const isVideoCompleted = (video) => {\r\n    return video.watched || \r\n           Boolean(video.completedAt) || \r\n           video.watchedBy?.some(watch => \r\n             watch.user === user._id && watch.completedAt\r\n           );\r\n  };\r\n  // Remove the second declaration of isVideoCompleted that appears later in the code\r\n  \r\n  // Update the render method to show watched status\r\n  const renderVideoCard = (video) => (\r\n    <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"180\"\r\n          image={`https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`}\r\n          alt={video.title}\r\n          sx={{ cursor: 'pointer' }}\r\n          onClick={() => handleWatchVideo(video)}\r\n        />\r\n        {isVideoCompleted(video) && (\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 10,\r\n              right: 10,\r\n              bgcolor: 'success.main',\r\n              color: 'white',\r\n              borderRadius: '50%',\r\n              p: 0.5\r\n            }}\r\n          >\r\n            <CheckCircle />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <CardContent sx={{ flexGrow: 1 }}>\r\n        {renderVideoStatus(video)}\r\n        <Typography gutterBottom variant=\"h6\" component=\"div\" noWrap>\r\n          {video.title}\r\n        </Typography>\r\n        <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n          <Timer sx={{ mr: 1, fontSize: 20 }} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Min. watch time: {video.minimumWatchTime}s\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <MonetizationOn sx={{ mr: 1, fontSize: 20 }} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {video.pointsReward} points\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {video.watched ? (\r\n          <Chip\r\n            icon={<CheckCircle />}\r\n            label=\"Completed\"\r\n            color=\"success\"\r\n            size=\"small\"\r\n          />\r\n        ) : (\r\n          <Button\r\n            startIcon={<PlayCircle />}\r\n            variant=\"contained\"\r\n            onClick={() => handleWatchVideo(video)}\r\n            disabled={!user.isActive}\r\n          >\r\n            Watch Video\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n  const extractVideoId = (url) => {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      if (urlObj.hostname.includes('youtube.com')) {\r\n        return urlObj.searchParams.get('v');\r\n      } else if (urlObj.hostname.includes('youtu.be')) {\r\n        return urlObj.pathname.slice(1);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error extracting video ID:', error);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderVideoStatus = (video) => {\r\n    if (isVideoCompleted(video)) {\r\n      return (\r\n        <Chip\r\n          icon={<CheckCircle />}\r\n          label=\"Completed\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          sx={{ mb: 1 }}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n  if (error) {\r\n    return (\r\n      <Container>\r\n        <Alert severity=\"error\" sx={{ mt: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n  // Remove this duplicate declaration\r\n  // const [filter, setFilter] = useState('all');\r\n  return (\r\n    <Container>\r\n      <PageHeader \r\n        title=\"Available Videos\" \r\n        subtitle=\"Watch videos to earn points\"\r\n      />\r\n  \r\n      {!user.isActive && (\r\n        <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n          Activate your account to start earning points from watching videos.\r\n        </Alert>\r\n      )}\r\n  \r\n      <Box sx={{ mb: 3, display: 'flex', gap: 2 }}>\r\n        <Button\r\n          variant={filter === 'all' ? 'contained' : 'outlined'}\r\n          onClick={() => setFilter('all')}\r\n        >\r\n          All Videos\r\n        </Button>\r\n        <Button\r\n          variant={filter === 'unwatched' ? 'contained' : 'outlined'}\r\n          onClick={() => setFilter('unwatched')}\r\n          startIcon={<PlayCircle />}\r\n        >\r\n          Unwatched\r\n        </Button>\r\n        <Button\r\n          variant={filter === 'watched' ? 'contained' : 'outlined'}\r\n          onClick={() => setFilter('watched')}\r\n          startIcon={<CheckCircle />}\r\n          color=\"success\"\r\n        >\r\n          Watched\r\n        </Button>\r\n      </Box>\r\n  \r\n      <Grid container spacing={3}>\r\n        {videos\r\n          .filter(video => {\r\n            if (filter === 'watched') return isVideoCompleted(video);\r\n            if (filter === 'unwatched') return !isVideoCompleted(video);\r\n            return true;\r\n          })\r\n          .map((video) => (\r\n            <Grid item xs={12} sm={6} md={4} key={video._id}>\r\n              <Card \r\n                sx={{ \r\n                  height: '100%', \r\n                  display: 'flex', \r\n                  flexDirection: 'column',\r\n                  opacity: isVideoCompleted(video) ? 0.8 : 1,\r\n                  bgcolor: isVideoCompleted(video) ? 'action.hover' : 'background.paper',\r\n                  position: 'relative',\r\n                  '&::after': isVideoCompleted(video) ? {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    borderRadius: 1,\r\n                    border: '2px solid',\r\n                    borderColor: 'success.main',\r\n                    pointerEvents: 'none'\r\n                  } : {}\r\n                }}\r\n              >\r\n                <Box sx={{ position: 'relative' }}>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    height=\"180\"\r\n                    image={`https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`}\r\n                    alt={video.title}\r\n                    sx={{ \r\n                      cursor: 'pointer',\r\n                      filter: isVideoCompleted(video) ? 'grayscale(0.3)' : 'none'\r\n                    }}\r\n                    onClick={() => handleWatchVideo(video)}\r\n                  />\r\n                  {isVideoCompleted(video) && (\r\n                    <Box\r\n                      sx={{\r\n                        position: 'absolute',\r\n                        top: 10,\r\n                        right: 10,\r\n                        bgcolor: 'success.main',\r\n                        color: 'white',\r\n                        borderRadius: '50%',\r\n                        p: 0.5,\r\n                        boxShadow: 2\r\n                      }}\r\n                    >\r\n                      <CheckCircle />\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n                <CardContent sx={{ flexGrow: 1 }}>\r\n                  <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                    <Typography \r\n                      variant=\"h6\" \r\n                      component=\"div\" \r\n                      noWrap\r\n                      sx={{ \r\n                        flex: 1,\r\n                        color: isVideoCompleted(video) ? 'text.secondary' : 'text.primary'\r\n                      }}\r\n                    >\r\n                      {video.title}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                    <Timer sx={{ mr: 1, fontSize: 20 }} />\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Min. watch time: {video.minimumWatchTime}s\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <MonetizationOn sx={{ mr: 1, fontSize: 20 }} />\r\n                    <Typography \r\n                      variant=\"body2\" \r\n                      color={isVideoCompleted(video) ? \"text.secondary\" : \"success.main\"}\r\n                      sx={{ fontWeight: isVideoCompleted(video) ? 'normal' : 'bold' }}\r\n                    >\r\n                      {isVideoCompleted(video) ? 'Points Earned' : `${video.pointsReward} points`}\r\n                    </Typography>\r\n                  </Box>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    fullWidth\r\n                    variant={isVideoCompleted(video) ? \"outlined\" : \"contained\"}\r\n                    startIcon={isVideoCompleted(video) ? <CheckCircle /> : <PlayCircle />}\r\n                    onClick={() => handleWatchVideo(video)}\r\n                    disabled={!user.isActive}\r\n                    color={isVideoCompleted(video) ? \"success\" : \"primary\"}\r\n                  >\r\n                    {isVideoCompleted(video) ? 'Watch Again' : 'Watch & Earn'}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n  \r\n          {videos.filter(video => {\r\n            if (filter === 'watched') return isVideoCompleted(video);\r\n            if (filter === 'unwatched') return !isVideoCompleted(video);\r\n            return true;\r\n          }).length === 0 && (\r\n            <Grid item xs={12}>\r\n              <Box textAlign=\"center\" py={4}>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                  {filter === 'all' \r\n                    ? 'No videos available at the moment'\r\n                    : filter === 'watched'\r\n                      ? 'You haven\\'t watched any videos yet'\r\n                      : 'No new videos to watch'\r\n                  }\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {filter === 'all' \r\n                    ? 'Please check back later for new videos'\r\n                    : filter === 'watched'\r\n                      ? 'Start watching videos to earn points'\r\n                      : 'You\\'ve watched all available videos'\r\n                  }\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n      </Grid>\r\n  {selectedVideo && (\r\n        <VideoPlayer\r\n          videoId={extractVideoId(selectedVideo.youtubeUrl)}\r\n          minimumWatchTime={selectedVideo.minimumWatchTime}\r\n          onComplete={handleVideoComplete}\r\n          onClose={() => setSelectedVideo(null)}\r\n          title={selectedVideo.title}\r\n          isCompleted={isVideoCompleted(selectedVideo)}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}