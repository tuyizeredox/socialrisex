{"ast":null,"code":"import{createContext,useContext,useRef}from'react';import Notification from'../components/common/Notification';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotificationContext=/*#__PURE__*/createContext();export function NotificationProvider(_ref){let{children}=_ref;const notificationRef=useRef();const showNotification=function(message){var _notificationRef$curr;let severity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'success';(_notificationRef$curr=notificationRef.current)===null||_notificationRef$curr===void 0?void 0:_notificationRef$curr.show(message,severity);};return/*#__PURE__*/_jsxs(NotificationContext.Provider,{value:{showNotification},children:[children,/*#__PURE__*/_jsx(Notification,{ref:notificationRef})]});}export const useNotification=()=>{const context=useContext(NotificationContext);if(!context){throw new Error('useNotification must be used within a NotificationProvider');}return context;};","map":{"version":3,"names":["createContext","useContext","useRef","Notification","jsx","_jsx","jsxs","_jsxs","NotificationContext","NotificationProvider","_ref","children","notificationRef","showNotification","message","_notificationRef$curr","severity","arguments","length","undefined","current","show","Provider","value","ref","useNotification","context","Error"],"sources":["C:/Users/tuyizere dieudonne/SOCIALRISE X1/SOCIALRISE X/frontend/src/context/NotificationContext.js"],"sourcesContent":["import { createContext, useContext, useRef } from 'react';\r\nimport Notification from '../components/common/Notification';\r\n\r\nconst NotificationContext = createContext();\r\n\r\nexport function NotificationProvider({ children }) {\r\n  const notificationRef = useRef();\r\n\r\n  const showNotification = (message, severity = 'success') => {\r\n    notificationRef.current?.show(message, severity);\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{ showNotification }}>\r\n      {children}\r\n      <Notification ref={notificationRef} />\r\n    </NotificationContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,MAAM,KAAQ,OAAO,CACzD,MAAO,CAAAC,YAAY,KAAM,mCAAmC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7D,KAAM,CAAAC,mBAAmB,cAAGR,aAAa,CAAC,CAAC,CAE3C,MAAO,SAAS,CAAAS,oBAAoBA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC/C,KAAM,CAAAE,eAAe,CAAGV,MAAM,CAAC,CAAC,CAEhC,KAAM,CAAAW,gBAAgB,CAAG,QAAAA,CAACC,OAAO,CAA2B,KAAAC,qBAAA,IAAzB,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,SAAS,CACrD,CAAAF,qBAAA,CAAAH,eAAe,CAACQ,OAAO,UAAAL,qBAAA,iBAAvBA,qBAAA,CAAyBM,IAAI,CAACP,OAAO,CAAEE,QAAQ,CAAC,CAClD,CAAC,CAED,mBACET,KAAA,CAACC,mBAAmB,CAACc,QAAQ,EAACC,KAAK,CAAE,CAAEV,gBAAiB,CAAE,CAAAF,QAAA,EACvDA,QAAQ,cACTN,IAAA,CAACF,YAAY,EAACqB,GAAG,CAAEZ,eAAgB,CAAE,CAAC,EACV,CAAC,CAEnC,CAEA,MAAO,MAAM,CAAAa,eAAe,CAAGA,CAAA,GAAM,CACnC,KAAM,CAAAC,OAAO,CAAGzB,UAAU,CAACO,mBAAmB,CAAC,CAC/C,GAAI,CAACkB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,4DAA4D,CAAC,CAC/E,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}