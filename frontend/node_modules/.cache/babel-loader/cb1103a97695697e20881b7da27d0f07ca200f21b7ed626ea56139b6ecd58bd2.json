{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tuyizere dieudonne\\\\SOCIALRISE X1\\\\SOCIALRISE X\\\\frontend\\\\src\\\\context\\\\NotificationContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useRef } from 'react';\nimport Notification from '../components/common/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotificationContext = /*#__PURE__*/createContext();\nexport function NotificationProvider({\n  children\n}) {\n  _s();\n  const notificationRef = useRef();\n  const showNotification = (message, severity = 'success') => {\n    var _notificationRef$curr;\n    (_notificationRef$curr = notificationRef.current) === null || _notificationRef$curr === void 0 ? void 0 : _notificationRef$curr.show(message, severity);\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: {\n      showNotification\n    },\n    children: [children, /*#__PURE__*/_jsxDEV(Notification, {\n      ref: notificationRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(NotificationProvider, \"abLyEvfuqRUbh9djv4+XOQEnONg=\");\n_c = NotificationProvider;\nexport const useNotification = () => {\n  _s2();\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};\n_s2(useNotification, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"NotificationProvider\");","map":{"version":3,"names":["createContext","useContext","useRef","Notification","jsxDEV","_jsxDEV","NotificationContext","NotificationProvider","children","_s","notificationRef","showNotification","message","severity","_notificationRef$curr","current","show","Provider","value","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","useNotification","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/tuyizere dieudonne/SOCIALRISE X1/SOCIALRISE X/frontend/src/context/NotificationContext.js"],"sourcesContent":["import { createContext, useContext, useRef } from 'react';\r\nimport Notification from '../components/common/Notification';\r\n\r\nconst NotificationContext = createContext();\r\n\r\nexport function NotificationProvider({ children }) {\r\n  const notificationRef = useRef();\r\n\r\n  const showNotification = (message, severity = 'success') => {\r\n    notificationRef.current?.show(message, severity);\r\n  };\r\n\r\n  return (\r\n    <NotificationContext.Provider value={{ showNotification }}>\r\n      {children}\r\n      <Notification ref={notificationRef} />\r\n    </NotificationContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useNotification = () => {\r\n  const context = useContext(NotificationContext);\r\n  if (!context) {\r\n    throw new Error('useNotification must be used within a NotificationProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,MAAM,QAAQ,OAAO;AACzD,OAAOC,YAAY,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,mBAAmB,gBAAGN,aAAa,CAAC,CAAC;AAE3C,OAAO,SAASO,oBAAoBA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAMC,eAAe,GAAGR,MAAM,CAAC,CAAC;EAEhC,MAAMS,gBAAgB,GAAGA,CAACC,OAAO,EAAEC,QAAQ,GAAG,SAAS,KAAK;IAAA,IAAAC,qBAAA;IAC1D,CAAAA,qBAAA,GAAAJ,eAAe,CAACK,OAAO,cAAAD,qBAAA,uBAAvBA,qBAAA,CAAyBE,IAAI,CAACJ,OAAO,EAAEC,QAAQ,CAAC;EAClD,CAAC;EAED,oBACER,OAAA,CAACC,mBAAmB,CAACW,QAAQ;IAACC,KAAK,EAAE;MAAEP;IAAiB,CAAE;IAAAH,QAAA,GACvDA,QAAQ,eACTH,OAAA,CAACF,YAAY;MAACgB,GAAG,EAAET;IAAgB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEnC;AAACd,EAAA,CAbeF,oBAAoB;AAAAiB,EAAA,GAApBjB,oBAAoB;AAepC,OAAO,MAAMkB,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,MAAMC,OAAO,GAAG1B,UAAU,CAACK,mBAAmB,CAAC;EAC/C,IAAI,CAACqB,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,4DAA4D,CAAC;EAC/E;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,eAAe;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}