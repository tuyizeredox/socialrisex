{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tuyizere dieudonne\\\\SOCIALRISE X1\\\\SOCIALRISE X\\\\frontend\\\\src\\\\pages\\\\user\\\\Videos.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Container, Grid, Card, CardMedia, CardContent, CardActions, Typography, Button, Box, Chip, CircularProgress, Alert, LinearProgress } from '@mui/material';\nimport { PlayCircle, MonetizationOn, Person, Timer, CheckCircle } from '@mui/icons-material';\nimport api from '../../utils/api';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNotification } from '../../context/NotificationContext';\nimport PageHeader from '../../components/common/PageHeader';\nimport VideoPlayer from '../../components/VideoPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Videos() {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const {\n    user\n  } = useAuth();\n  const {\n    showNotification\n  } = useNotification();\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n  const fetchVideos = async () => {\n    try {\n      const response = await api.get('/videos/available');\n      if (response.data && Array.isArray(response.data)) {\n        setVideos(response.data);\n      } else {\n        throw new Error('Invalid response format');\n      }\n    } catch (err) {\n      setError('Failed to load videos');\n      showNotification('Failed to load videos', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleWatchVideo = video => {\n    if (!user.isActive) {\n      showNotification('Please activate your account to watch videos', 'warning');\n      return;\n    }\n    setSelectedVideo(video);\n  };\n  const handleVideoComplete = async () => {\n    try {\n      const response = await api.post(`/videos/${selectedVideo._id}/complete`, {\n        watchTime: selectedVideo.minimumWatchTime\n      });\n\n      // Update the videos list to mark the completed video as watched\n      setVideos(prevVideos => prevVideos.map(video => video._id === selectedVideo._id ? {\n        ...video,\n        watched: true\n      } : video));\n\n      // Show different messages based on whether points were earned\n      if (response.data.pointsEarned > 0) {\n        showNotification(`Congratulations! You earned ${response.data.pointsEarned} points!`, 'success');\n      } else {\n        showNotification('Video watched successfully!', 'success');\n      }\n      setSelectedVideo(null);\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response2;\n      showNotification(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to record video completion', 'error');\n      // Don't close the video player on error\n      if (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) !== 400) {\n        setSelectedVideo(null);\n      }\n    }\n  };\n  // Update the render method to show watched status\n  const renderVideoCard = video => /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        height: \"180\",\n        image: `https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`,\n        alt: video.title,\n        sx: {\n          cursor: 'pointer'\n        },\n        onClick: () => handleWatchVideo(video)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), isVideoCompleted(video) && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          position: 'absolute',\n          top: 10,\n          right: 10,\n          bgcolor: 'success.main',\n          color: 'white',\n          borderRadius: '50%',\n          p: 0.5\n        },\n        children: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        flexGrow: 1\n      },\n      children: [renderVideoStatus(video), /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h6\",\n        component: \"div\",\n        noWrap: true,\n        children: video.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        mb: 1,\n        children: [/*#__PURE__*/_jsxDEV(Timer, {\n          sx: {\n            mr: 1,\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [\"Min. watch time: \", video.minimumWatchTime, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(MonetizationOn, {\n          sx: {\n            mr: 1,\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: [video.pointsReward, \" points\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      children: video.watched ? /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }, this),\n        label: \"Completed\",\n        color: \"success\",\n        size: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(PlayCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 24\n        }, this),\n        variant: \"contained\",\n        onClick: () => handleWatchVideo(video),\n        disabled: !user.isActive,\n        children: \"Watch Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n  const extractVideoId = url => {\n    try {\n      const urlObj = new URL(url);\n      if (urlObj.hostname.includes('youtube.com')) {\n        return urlObj.searchParams.get('v');\n      } else if (urlObj.hostname.includes('youtu.be')) {\n        return urlObj.pathname.slice(1);\n      }\n    } catch (error) {\n      console.error('Error extracting video ID:', error);\n    }\n    return null;\n  };\n  const isVideoCompleted = video => {\n    var _video$watchedBy;\n    return (_video$watchedBy = video.watchedBy) === null || _video$watchedBy === void 0 ? void 0 : _video$watchedBy.some(watch => watch.user === user._id && watch.completedAt);\n  };\n  const renderVideoStatus = video => {\n    if (isVideoCompleted(video)) {\n      return /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this),\n        label: \"Completed\",\n        color: \"success\",\n        size: \"small\",\n        sx: {\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 3\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this);\n  }\n  // Add new state for filter\n  const [filter, setFilter] = useState('all'); // 'all', 'watched', 'unwatched'\n\n  // Add filter buttons after the PageHeader\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Available Videos\",\n      subtitle: \"Watch videos to earn points\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), !user.isActive && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mb: 3\n      },\n      children: \"Activate your account to start earning points from watching videos.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3,\n        display: 'flex',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: filter === 'all' ? 'contained' : 'outlined',\n        onClick: () => setFilter('all'),\n        children: \"All Videos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: filter === 'unwatched' ? 'contained' : 'outlined',\n        onClick: () => setFilter('unwatched'),\n        startIcon: /*#__PURE__*/_jsxDEV(PlayCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 22\n        }, this),\n        children: \"Unwatched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: filter === 'watched' ? 'contained' : 'outlined',\n        onClick: () => setFilter('watched'),\n        startIcon: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 22\n        }, this),\n        color: \"success\",\n        children: \"Watched\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [videos.filter(video => {\n        if (filter === 'watched') return isVideoCompleted(video);\n        if (filter === 'unwatched') return !isVideoCompleted(video);\n        return true;\n      }).map(video => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            opacity: isVideoCompleted(video) ? 0.8 : 1,\n            bgcolor: isVideoCompleted(video) ? 'action.hover' : 'background.paper',\n            position: 'relative',\n            '&::after': isVideoCompleted(video) ? {\n              content: '\"\"',\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              right: 0,\n              bottom: 0,\n              borderRadius: 1,\n              border: '2px solid',\n              borderColor: 'success.main',\n              pointerEvents: 'none'\n            } : {}\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              position: 'relative'\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n              component: \"img\",\n              height: \"180\",\n              image: `https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`,\n              alt: video.title,\n              sx: {\n                cursor: 'pointer',\n                filter: isVideoCompleted(video) ? 'grayscale(0.3)' : 'none'\n              },\n              onClick: () => handleWatchVideo(video)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), isVideoCompleted(video) && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                position: 'absolute',\n                top: 10,\n                right: 10,\n                bgcolor: 'success.main',\n                color: 'white',\n                borderRadius: '50%',\n                p: 0.5,\n                boxShadow: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            sx: {\n              flexGrow: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 1,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                component: \"div\",\n                noWrap: true,\n                sx: {\n                  flex: 1,\n                  color: isVideoCompleted(video) ? 'text.secondary' : 'text.primary'\n                },\n                children: video.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              mb: 1,\n              children: [/*#__PURE__*/_jsxDEV(Timer, {\n                sx: {\n                  mr: 1,\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Min. watch time: \", video.minimumWatchTime, \"s\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(MonetizationOn, {\n                sx: {\n                  mr: 1,\n                  fontSize: 20\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: isVideoCompleted(video) ? \"text.secondary\" : \"success.main\",\n                sx: {\n                  fontWeight: isVideoCompleted(video) ? 'normal' : 'bold'\n                },\n                children: isVideoCompleted(video) ? 'Points Earned' : `${video.pointsReward} points`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: isVideoCompleted(video) ? \"outlined\" : \"contained\",\n              startIcon: isVideoCompleted(video) ? /*#__PURE__*/_jsxDEV(CheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 58\n              }, this) : /*#__PURE__*/_jsxDEV(PlayCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 76\n              }, this),\n              onClick: () => handleWatchVideo(video),\n              disabled: !user.isActive,\n              color: isVideoCompleted(video) ? \"success\" : \"primary\",\n              children: isVideoCompleted(video) ? 'Watch Again' : 'Watch & Earn'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this)\n      }, video._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }, this)), videos.filter(video => {\n        if (filter === 'watched') return isVideoCompleted(video);\n        if (filter === 'unwatched') return !isVideoCompleted(video);\n        return true;\n      }).length === 0 && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          py: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"text.secondary\",\n            children: filter === 'all' ? 'No videos available at the moment' : filter === 'watched' ? 'You haven\\'t watched any videos yet' : 'No new videos to watch'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: filter === 'all' ? 'Please check back later for new videos' : filter === 'watched' ? 'Start watching videos to earn points' : 'You\\'ve watched all available videos'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }, this), \"orr      \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n_s(Videos, \"ZcIG8o+MQaLPbWltqzUhKc3eqtQ=\", false, function () {\n  return [useAuth, useNotification];\n});\n_c = Videos;\nvar _c;\n$RefreshReg$(_c, \"Videos\");","map":{"version":3,"names":["useState","useEffect","Container","Grid","Card","CardMedia","CardContent","CardActions","Typography","Button","Box","Chip","CircularProgress","Alert","LinearProgress","PlayCircle","MonetizationOn","Person","Timer","CheckCircle","api","useAuth","useNotification","PageHeader","VideoPlayer","jsxDEV","_jsxDEV","Videos","_s","videos","setVideos","loading","setLoading","error","setError","selectedVideo","setSelectedVideo","user","showNotification","fetchVideos","response","get","data","Array","isArray","Error","err","handleWatchVideo","video","isActive","handleVideoComplete","post","_id","watchTime","minimumWatchTime","prevVideos","map","watched","pointsEarned","_err$response","_err$response$data","_err$response2","message","status","renderVideoCard","sx","height","display","flexDirection","children","position","component","image","extractVideoId","youtubeUrl","alt","title","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isVideoCompleted","top","right","bgcolor","color","borderRadius","p","flexGrow","renderVideoStatus","gutterBottom","variant","noWrap","alignItems","mb","mr","fontSize","pointsReward","icon","label","size","startIcon","disabled","url","urlObj","URL","hostname","includes","searchParams","pathname","slice","console","_video$watchedBy","watchedBy","some","watch","completedAt","justifyContent","minHeight","severity","mt","filter","setFilter","subtitle","gap","container","spacing","item","xs","sm","md","opacity","content","left","bottom","border","borderColor","pointerEvents","boxShadow","flex","fontWeight","fullWidth","length","textAlign","py","_c","$RefreshReg$"],"sources":["C:/Users/tuyizere dieudonne/SOCIALRISE X1/SOCIALRISE X/frontend/src/pages/user/Videos.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  Chip,\r\n  CircularProgress,\r\n  Alert,\r\n  LinearProgress\r\n} from '@mui/material';\r\nimport {\r\n  PlayCircle,\r\n  MonetizationOn,\r\n  Person,\r\n  Timer,\r\n  CheckCircle\r\n} from '@mui/icons-material';\r\nimport api from '../../utils/api';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { useNotification } from '../../context/NotificationContext';\r\nimport PageHeader from '../../components/common/PageHeader';\r\nimport VideoPlayer from '../../components/VideoPlayer';\r\n\r\nexport default function Videos() {\r\n  const [videos, setVideos] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const { user } = useAuth();\r\n  const { showNotification } = useNotification();\r\n\r\n  useEffect(() => {\r\n    fetchVideos();\r\n  }, []);\r\n\r\n  const fetchVideos = async () => {\r\n    try {\r\n      const response = await api.get('/videos/available');\r\n      if (response.data && Array.isArray(response.data)) {\r\n        setVideos(response.data);\r\n      } else {\r\n        throw new Error('Invalid response format');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to load videos');\r\n      showNotification('Failed to load videos', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleWatchVideo = (video) => {\r\n    if (!user.isActive) {\r\n      showNotification('Please activate your account to watch videos', 'warning');\r\n      return;\r\n    }\r\n    setSelectedVideo(video);\r\n  };\r\n  const handleVideoComplete = async () => {\r\n    try {\r\n      const response = await api.post(`/videos/${selectedVideo._id}/complete`, {\r\n        watchTime: selectedVideo.minimumWatchTime\r\n      });\r\n      \r\n      // Update the videos list to mark the completed video as watched\r\n      setVideos(prevVideos => \r\n        prevVideos.map(video => \r\n          video._id === selectedVideo._id \r\n            ? { ...video, watched: true }\r\n            : video\r\n        )\r\n      );\r\n  \r\n      // Show different messages based on whether points were earned\r\n      if (response.data.pointsEarned > 0) {\r\n        showNotification(\r\n          `Congratulations! You earned ${response.data.pointsEarned} points!`, \r\n          'success'\r\n        );\r\n      } else {\r\n        showNotification('Video watched successfully!', 'success');\r\n      }\r\n      \r\n      setSelectedVideo(null);\r\n    } catch (err) {\r\n      showNotification(\r\n        err.response?.data?.message || 'Failed to record video completion', \r\n        'error'\r\n      );\r\n      // Don't close the video player on error\r\n      if (err.response?.status !== 400) {\r\n        setSelectedVideo(null);\r\n      }\r\n    }\r\n  };\r\n  // Update the render method to show watched status\r\n  const renderVideoCard = (video) => (\r\n    <Card sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"180\"\r\n          image={`https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`}\r\n          alt={video.title}\r\n          sx={{ cursor: 'pointer' }}\r\n          onClick={() => handleWatchVideo(video)}\r\n        />\r\n        {isVideoCompleted(video) && (\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              top: 10,\r\n              right: 10,\r\n              bgcolor: 'success.main',\r\n              color: 'white',\r\n              borderRadius: '50%',\r\n              p: 0.5\r\n            }}\r\n          >\r\n            <CheckCircle />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      <CardContent sx={{ flexGrow: 1 }}>\r\n        {renderVideoStatus(video)}\r\n        <Typography gutterBottom variant=\"h6\" component=\"div\" noWrap>\r\n          {video.title}\r\n        </Typography>\r\n        <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n          <Timer sx={{ mr: 1, fontSize: 20 }} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Min. watch time: {video.minimumWatchTime}s\r\n          </Typography>\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <MonetizationOn sx={{ mr: 1, fontSize: 20 }} />\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {video.pointsReward} points\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <CardActions>\r\n        {video.watched ? (\r\n          <Chip\r\n            icon={<CheckCircle />}\r\n            label=\"Completed\"\r\n            color=\"success\"\r\n            size=\"small\"\r\n          />\r\n        ) : (\r\n          <Button\r\n            startIcon={<PlayCircle />}\r\n            variant=\"contained\"\r\n            onClick={() => handleWatchVideo(video)}\r\n            disabled={!user.isActive}\r\n          >\r\n            Watch Video\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n  const extractVideoId = (url) => {\r\n    try {\r\n      const urlObj = new URL(url);\r\n      if (urlObj.hostname.includes('youtube.com')) {\r\n        return urlObj.searchParams.get('v');\r\n      } else if (urlObj.hostname.includes('youtu.be')) {\r\n        return urlObj.pathname.slice(1);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error extracting video ID:', error);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const isVideoCompleted = (video) => {\r\n    return video.watchedBy?.some(watch => \r\n      watch.user === user._id && watch.completedAt\r\n    );\r\n  };\r\n\r\n  const renderVideoStatus = (video) => {\r\n    if (isVideoCompleted(video)) {\r\n      return (\r\n        <Chip\r\n          icon={<CheckCircle />}\r\n          label=\"Completed\"\r\n          color=\"success\"\r\n          size=\"small\"\r\n          sx={{ mb: 1 }}\r\n        />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Container>\r\n        <Alert severity=\"error\" sx={{ mt: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      </Container>\r\n    );\r\n  }\r\n  // Add new state for filter\r\n  const [filter, setFilter] = useState('all'); // 'all', 'watched', 'unwatched'\r\n  \r\n  // Add filter buttons after the PageHeader\r\n  return (\r\n    <Container>\r\n      <PageHeader \r\n        title=\"Available Videos\" \r\n        subtitle=\"Watch videos to earn points\"\r\n      />\r\n  \r\n      {!user.isActive && (\r\n        <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n          Activate your account to start earning points from watching videos.\r\n        </Alert>\r\n      )}\r\n  \r\n      <Box sx={{ mb: 3, display: 'flex', gap: 2 }}>\r\n        <Button\r\n          variant={filter === 'all' ? 'contained' : 'outlined'}\r\n          onClick={() => setFilter('all')}\r\n        >\r\n          All Videos\r\n        </Button>\r\n        <Button\r\n          variant={filter === 'unwatched' ? 'contained' : 'outlined'}\r\n          onClick={() => setFilter('unwatched')}\r\n          startIcon={<PlayCircle />}\r\n        >\r\n          Unwatched\r\n        </Button>\r\n        <Button\r\n          variant={filter === 'watched' ? 'contained' : 'outlined'}\r\n          onClick={() => setFilter('watched')}\r\n          startIcon={<CheckCircle />}\r\n          color=\"success\"\r\n        >\r\n          Watched\r\n        </Button>\r\n      </Box>\r\n  \r\n      <Grid container spacing={3}>\r\n        {videos\r\n          .filter(video => {\r\n            if (filter === 'watched') return isVideoCompleted(video);\r\n            if (filter === 'unwatched') return !isVideoCompleted(video);\r\n            return true;\r\n          })\r\n          .map((video) => (\r\n            <Grid item xs={12} sm={6} md={4} key={video._id}>\r\n              <Card \r\n                sx={{ \r\n                  height: '100%', \r\n                  display: 'flex', \r\n                  flexDirection: 'column',\r\n                  opacity: isVideoCompleted(video) ? 0.8 : 1,\r\n                  bgcolor: isVideoCompleted(video) ? 'action.hover' : 'background.paper',\r\n                  position: 'relative',\r\n                  '&::after': isVideoCompleted(video) ? {\r\n                    content: '\"\"',\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    borderRadius: 1,\r\n                    border: '2px solid',\r\n                    borderColor: 'success.main',\r\n                    pointerEvents: 'none'\r\n                  } : {}\r\n                }}\r\n              >\r\n                <Box sx={{ position: 'relative' }}>\r\n                  <CardMedia\r\n                    component=\"img\"\r\n                    height=\"180\"\r\n                    image={`https://img.youtube.com/vi/${extractVideoId(video.youtubeUrl)}/hqdefault.jpg`}\r\n                    alt={video.title}\r\n                    sx={{ \r\n                      cursor: 'pointer',\r\n                      filter: isVideoCompleted(video) ? 'grayscale(0.3)' : 'none'\r\n                    }}\r\n                    onClick={() => handleWatchVideo(video)}\r\n                  />\r\n                  {isVideoCompleted(video) && (\r\n                    <Box\r\n                      sx={{\r\n                        position: 'absolute',\r\n                        top: 10,\r\n                        right: 10,\r\n                        bgcolor: 'success.main',\r\n                        color: 'white',\r\n                        borderRadius: '50%',\r\n                        p: 0.5,\r\n                        boxShadow: 2\r\n                      }}\r\n                    >\r\n                      <CheckCircle />\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n                <CardContent sx={{ flexGrow: 1 }}>\r\n                  <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                    <Typography \r\n                      variant=\"h6\" \r\n                      component=\"div\" \r\n                      noWrap\r\n                      sx={{ \r\n                        flex: 1,\r\n                        color: isVideoCompleted(video) ? 'text.secondary' : 'text.primary'\r\n                      }}\r\n                    >\r\n                      {video.title}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                    <Timer sx={{ mr: 1, fontSize: 20 }} />\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Min. watch time: {video.minimumWatchTime}s\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <MonetizationOn sx={{ mr: 1, fontSize: 20 }} />\r\n                    <Typography \r\n                      variant=\"body2\" \r\n                      color={isVideoCompleted(video) ? \"text.secondary\" : \"success.main\"}\r\n                      sx={{ fontWeight: isVideoCompleted(video) ? 'normal' : 'bold' }}\r\n                    >\r\n                      {isVideoCompleted(video) ? 'Points Earned' : `${video.pointsReward} points`}\r\n                    </Typography>\r\n                  </Box>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button\r\n                    fullWidth\r\n                    variant={isVideoCompleted(video) ? \"outlined\" : \"contained\"}\r\n                    startIcon={isVideoCompleted(video) ? <CheckCircle /> : <PlayCircle />}\r\n                    onClick={() => handleWatchVideo(video)}\r\n                    disabled={!user.isActive}\r\n                    color={isVideoCompleted(video) ? \"success\" : \"primary\"}\r\n                  >\r\n                    {isVideoCompleted(video) ? 'Watch Again' : 'Watch & Earn'}\r\n                  </Button>\r\n                </CardActions>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n  \r\n          {videos.filter(video => {\r\n            if (filter === 'watched') return isVideoCompleted(video);\r\n            if (filter === 'unwatched') return !isVideoCompleted(video);\r\n            return true;\r\n          }).length === 0 && (\r\n            <Grid item xs={12}>\r\n              <Box textAlign=\"center\" py={4}>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                  {filter === 'all' \r\n                    ? 'No videos available at the moment'\r\n                    : filter === 'watched'\r\n                      ? 'You haven\\'t watched any videos yet'\r\n                      : 'No new videos to watch'\r\n                  }\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  {filter === 'all' \r\n                    ? 'Please check back later for new videos'\r\n                    : filter === 'watched'\r\n                      ? 'Start watching videos to earn points'\r\n                      : 'You\\'ve watched all available videos'\r\n                  }\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n          )}\r\norr      </Grid>\r\n  {/* ... rest of the component remains the same ... */}\r\n    </Container>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}