{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\socialrisex-main\\\\frontend\\\\src\\\\pages\\\\admin\\\\VideoManagement.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Container, Paper, Typography, Box, Button, TextField, Grid, Card, CardContent, CardActions, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, Switch, FormControlLabel } from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon, Edit as EditIcon, VideoLibrary } from '@mui/icons-material';\nimport api from '../../utils/api';\nimport PageHeader from '../../components/common/PageHeader';\nimport FormField from '../../components/common/FormField';\nimport EmptyState from '../../components/common/EmptyState';\nimport { useNotification } from '../../context/NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VideoManagement() {\n  _s();\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingVideo, setEditingVideo] = useState(null);\n  const [formData, setFormData] = useState({\n    title: '',\n    youtubeUrl: '',\n    pointsReward: 1000,\n    minimumWatchTime: 60,\n    isActive: true\n  });\n  const [selectedVideo, setSelectedVideo] = useState(null);\n  const {\n    showNotification\n  } = useNotification();\n  const fetchVideos = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/admin/videos');\n      if (response.data && response.data.videos) {\n        setVideos(response.data.videos);\n      } else {\n        setVideos([]);\n      }\n    } catch (error) {\n      showNotification(error.message || 'Failed to fetch videos', 'error');\n      setVideos([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n  const handleOpenDialog = (video = null) => {\n    if (video) {\n      setEditingVideo(video);\n      setFormData({\n        title: video.title,\n        youtubeUrl: video.youtubeUrl,\n        pointsReward: video.pointsReward,\n        minimumWatchTime: video.minimumWatchTime,\n        isActive: video.isActive\n      });\n    } else {\n      setEditingVideo(null);\n      setFormData({\n        title: '',\n        youtubeUrl: '',\n        pointsReward: 1000,\n        minimumWatchTime: 60,\n        isActive: true\n      });\n    }\n    setOpenDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setEditingVideo(null);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (!formData.title || !formData.youtubeUrl) {\n        showNotification('Please fill in all required fields', 'error');\n        return;\n      }\n      try {\n        new URL(formData.youtubeUrl);\n      } catch (error) {\n        showNotification('Please enter a valid YouTube URL', 'error');\n        return;\n      }\n      if (editingVideo) {\n        await api.put(`/admin/videos/${editingVideo._id}`, formData);\n        showNotification('Video updated successfully', 'success');\n      } else {\n        await api.post('/admin/videos', formData);\n        showNotification('Video added successfully', 'success');\n      }\n      fetchVideos();\n      handleCloseDialog();\n    } catch (error) {\n      var _error$response, _error$response$data;\n      showNotification(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Error saving video', 'error');\n    }\n  };\n  const handleDeleteVideo = async videoId => {\n    if (window.confirm('Are you sure you want to delete this video?')) {\n      try {\n        await api.delete(`/admin/videos/${videoId}`);\n        showNotification('Video deleted successfully', 'success');\n        fetchVideos();\n      } catch (error) {\n        showNotification(error.message || 'Error deleting video', 'error');\n      }\n    }\n  };\n  const handleToggleStatus = async (videoId, currentStatus) => {\n    try {\n      await api.put(`/admin/videos/${videoId}`, {\n        isActive: !currentStatus\n      });\n      showNotification('Video status updated successfully', 'success');\n      fetchVideos();\n    } catch (error) {\n      showNotification(error.message || 'Error updating video status', 'error');\n    }\n  };\n  const handleWatchVideo = video => {\n    setSelectedVideo(video);\n  };\n  const handleVideoComplete = async () => {\n    try {\n      await api.post(`/videos/${selectedVideo._id}/complete`, {\n        watchTime: selectedVideo.minimumWatchTime\n      });\n      showNotification(`Congratulations! You earned ${selectedVideo.pointsReward} points!`, 'success');\n      setSelectedVideo(null);\n      fetchVideos();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      showNotification(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to record video completion', 'error');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"Video Management\",\n      breadcrumbs: [{\n        label: 'Dashboard',\n        path: '/admin'\n      }, {\n        label: 'Videos',\n        path: '/admin/videos'\n      }],\n      action: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 24\n        }, this),\n        onClick: () => handleOpenDialog(),\n        children: \"Add Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), videos.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyState, {\n      icon: VideoLibrary,\n      title: \"No Videos Found\",\n      description: \"Add your first video to get started\",\n      action: () => handleOpenDialog(),\n      actionText: \"Add Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: Array.isArray(videos) && videos.map(video => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: video.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              paragraph: true,\n              children: [\"Points: \", video.pointsReward]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Min. Watch Time: \", video.minimumWatchTime, \"s\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, {\n                checked: video.isActive,\n                onChange: () => handleToggleStatus(video._id, video.isActive)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 23\n              }, this),\n              label: video.isActive ? 'Active' : 'Inactive'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleOpenDialog(video),\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleDeleteVideo(video._id),\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this)\n      }, video._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingVideo ? 'Edit Video' : 'Add New Video'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleSubmit,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormField, {\n            label: \"Title\",\n            name: \"title\",\n            value: formData.title,\n            onChange: e => setFormData({\n              ...formData,\n              title: e.target.value\n            }),\n            required: true,\n            fullWidth: true,\n            margin: \"normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            label: \"YouTube URL\",\n            name: \"youtubeUrl\",\n            value: formData.youtubeUrl,\n            onChange: e => setFormData({\n              ...formData,\n              youtubeUrl: e.target.value\n            }),\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            helperText: \"Enter the full YouTube video URL (e.g., https://www.youtube.com/watch?v=...)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            label: \"Points Reward\",\n            name: \"pointsReward\",\n            type: \"number\",\n            value: formData.pointsReward,\n            onChange: e => setFormData({\n              ...formData,\n              pointsReward: parseInt(e.target.value)\n            }),\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            inputProps: {\n              min: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormField, {\n            label: \"Minimum Watch Time (seconds)\",\n            name: \"minimumWatchTime\",\n            type: \"number\",\n            value: formData.minimumWatchTime,\n            onChange: e => setFormData({\n              ...formData,\n              minimumWatchTime: parseInt(e.target.value)\n            }),\n            required: true,\n            fullWidth: true,\n            margin: \"normal\",\n            inputProps: {\n              min: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          variant: \"contained\",\n          children: [editingVideo ? 'Update' : 'Add', \" Video\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoManagement, \"OY2atLTcRtMCASB3nTk7YyjwPCc=\", false, function () {\n  return [useNotification];\n});\n_c = VideoManagement;\nvar _c;\n$RefreshReg$(_c, \"VideoManagement\");","map":{"version":3,"names":["useState","useEffect","Container","Paper","Typography","Box","Button","TextField","Grid","Card","CardContent","CardActions","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","CircularProgress","Switch","FormControlLabel","Add","AddIcon","Delete","DeleteIcon","Edit","EditIcon","VideoLibrary","api","PageHeader","FormField","EmptyState","useNotification","jsxDEV","_jsxDEV","VideoManagement","_s","videos","setVideos","loading","setLoading","openDialog","setOpenDialog","editingVideo","setEditingVideo","formData","setFormData","title","youtubeUrl","pointsReward","minimumWatchTime","isActive","selectedVideo","setSelectedVideo","showNotification","fetchVideos","response","get","data","error","message","handleOpenDialog","video","handleCloseDialog","handleSubmit","e","preventDefault","URL","put","_id","post","_error$response","_error$response$data","handleDeleteVideo","videoId","window","confirm","delete","handleToggleStatus","currentStatus","handleWatchVideo","handleVideoComplete","watchTime","err","_err$response","_err$response$data","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","breadcrumbs","label","path","action","variant","startIcon","onClick","length","icon","description","actionText","container","spacing","Array","isArray","map","item","xs","sm","md","gutterBottom","color","paragraph","control","checked","onChange","open","onClose","fullWidth","component","onSubmit","sx","mt","name","value","target","required","margin","helperText","type","parseInt","inputProps","min","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/socialrisex-main/frontend/src/pages/admin/VideoManagement.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  Container,\n  Paper,\n  Typography,\n  Box,\n  Button,\n  TextField,\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  IconButton,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  CircularProgress,\n  Switch,\n  FormControlLabel\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Delete as DeleteIcon,\n  Edit as EditIcon,\n  VideoLibrary\n} from '@mui/icons-material';\nimport api from '../../utils/api';\nimport PageHeader from '../../components/common/PageHeader';\nimport FormField from '../../components/common/FormField';\nimport EmptyState from '../../components/common/EmptyState';\nimport { useNotification } from '../../context/NotificationContext';\n\nexport default function VideoManagement() {\n  const [videos, setVideos] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [openDialog, setOpenDialog] = useState(false);\n  const [editingVideo, setEditingVideo] = useState(null);\n  const [formData, setFormData] = useState({\n    title: '',\n    youtubeUrl: '',\n    pointsReward: 1000,\n    minimumWatchTime: 60,\n    isActive: true\n  });\n  const [selectedVideo, setSelectedVideo] = useState(null);\n\n  const { showNotification } = useNotification();\n\n  const fetchVideos = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/admin/videos');\n      if (response.data && response.data.videos) {\n        setVideos(response.data.videos);\n      } else {\n        setVideos([]);\n      }\n    } catch (error) {\n      showNotification(error.message || 'Failed to fetch videos', 'error');\n      setVideos([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchVideos();\n  }, []);\n\n  const handleOpenDialog = (video = null) => {\n    if (video) {\n      setEditingVideo(video);\n      setFormData({\n        title: video.title,\n        youtubeUrl: video.youtubeUrl,\n        pointsReward: video.pointsReward,\n        minimumWatchTime: video.minimumWatchTime,\n        isActive: video.isActive\n      });\n    } else {\n      setEditingVideo(null);\n      setFormData({\n        title: '',\n        youtubeUrl: '',\n        pointsReward: 1000,\n        minimumWatchTime: 60,\n        isActive: true\n      });\n    }\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n    setEditingVideo(null);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (!formData.title || !formData.youtubeUrl) {\n        showNotification('Please fill in all required fields', 'error');\n        return;\n      }\n\n      try {\n        new URL(formData.youtubeUrl);\n      } catch (error) {\n        showNotification('Please enter a valid YouTube URL', 'error');\n        return;\n      }\n\n      if (editingVideo) {\n        await api.put(`/admin/videos/${editingVideo._id}`, formData);\n        showNotification('Video updated successfully', 'success');\n      } else {\n        await api.post('/admin/videos', formData);\n        showNotification('Video added successfully', 'success');\n      }\n      fetchVideos();\n      handleCloseDialog();\n    } catch (error) {\n      showNotification(error.response?.data?.message || 'Error saving video', 'error');\n    }\n  };\n\n  const handleDeleteVideo = async (videoId) => {\n    if (window.confirm('Are you sure you want to delete this video?')) {\n      try {\n        await api.delete(`/admin/videos/${videoId}`);\n        showNotification('Video deleted successfully', 'success');\n        fetchVideos();\n      } catch (error) {\n        showNotification(error.message || 'Error deleting video', 'error');\n      }\n    }\n  };\n\n  const handleToggleStatus = async (videoId, currentStatus) => {\n    try {\n      await api.put(`/admin/videos/${videoId}`, { isActive: !currentStatus });\n      showNotification('Video status updated successfully', 'success');\n      fetchVideos();\n    } catch (error) {\n      showNotification(error.message || 'Error updating video status', 'error');\n    }\n  };\n\n  const handleWatchVideo = (video) => {\n    setSelectedVideo(video);\n  };\n\n  const handleVideoComplete = async () => {\n    try {\n      await api.post(`/videos/${selectedVideo._id}/complete`, {\n        watchTime: selectedVideo.minimumWatchTime\n      });\n      showNotification(`Congratulations! You earned ${selectedVideo.pointsReward} points!`, 'success');\n      setSelectedVideo(null);\n      fetchVideos();\n    } catch (err) {\n      showNotification(err.response?.data?.message || 'Failed to record video completion', 'error');\n    }\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <PageHeader\n        title=\"Video Management\"\n        breadcrumbs={[\n          { label: 'Dashboard', path: '/admin' },\n          { label: 'Videos', path: '/admin/videos' }\n        ]}\n        action={\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            onClick={() => handleOpenDialog()}\n          >\n            Add Video\n          </Button>\n        }\n      />\n\n      {videos.length === 0 ? (\n        <EmptyState\n          icon={VideoLibrary}\n          title=\"No Videos Found\"\n          description=\"Add your first video to get started\"\n          action={() => handleOpenDialog()}\n          actionText=\"Add Video\"\n        />\n      ) : (\n        <Grid container spacing={3}>\n          {Array.isArray(videos) && videos.map((video) => (\n            <Grid item xs={12} sm={6} md={4} key={video._id}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\" gutterBottom>\n                    {video.title}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                    Points: {video.pointsReward}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Min. Watch Time: {video.minimumWatchTime}s\n                  </Typography>\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={video.isActive}\n                        onChange={() => handleToggleStatus(video._id, video.isActive)}\n                      />\n                    }\n                    label={video.isActive ? 'Active' : 'Inactive'}\n                  />\n                </CardContent>\n                <CardActions>\n                  <IconButton onClick={() => handleOpenDialog(video)}>\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton onClick={() => handleDeleteVideo(video._id)}>\n                    <DeleteIcon />\n                  </IconButton>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      )}\n\n      <Dialog open={openDialog} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>\n          {editingVideo ? 'Edit Video' : 'Add New Video'}\n        </DialogTitle>\n        <DialogContent>\n          <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 2 }}>\n            <FormField\n              label=\"Title\"\n              name=\"title\"\n              value={formData.title}\n              onChange={(e) => setFormData({ ...formData, title: e.target.value })}\n              required\n              fullWidth\n              margin=\"normal\"\n            />\n            <FormField\n              label=\"YouTube URL\"\n              name=\"youtubeUrl\"\n              value={formData.youtubeUrl}\n              onChange={(e) => setFormData({ ...formData, youtubeUrl: e.target.value })}\n              required\n              fullWidth\n              margin=\"normal\"\n              helperText=\"Enter the full YouTube video URL (e.g., https://www.youtube.com/watch?v=...)\"\n            />\n            <FormField\n              label=\"Points Reward\"\n              name=\"pointsReward\"\n              type=\"number\"\n              value={formData.pointsReward}\n              onChange={(e) => setFormData({ ...formData, pointsReward: parseInt(e.target.value) })}\n              required\n              fullWidth\n              margin=\"normal\"\n              inputProps={{ min: 0 }}\n            />\n            <FormField\n              label=\"Minimum Watch Time (seconds)\"\n              name=\"minimumWatchTime\"\n              type=\"number\"\n              value={formData.minimumWatchTime}\n              onChange={(e) => setFormData({ ...formData, minimumWatchTime: parseInt(e.target.value) })}\n              required\n              fullWidth\n              margin=\"normal\"\n              inputProps={{ min: 0 }}\n            />\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog}>Cancel</Button>\n          <Button onClick={handleSubmit} variant=\"contained\">\n            {editingVideo ? 'Update' : 'Add'} Video\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Container>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}