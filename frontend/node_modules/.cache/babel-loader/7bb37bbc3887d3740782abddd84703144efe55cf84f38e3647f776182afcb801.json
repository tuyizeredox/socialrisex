{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\socialrisex-main\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useState, useContext, useEffect, useCallback, useMemo } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport api from '../utils/api';\nimport { useNotification } from './NotificationContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const notification = useNotification();\n  const showNotification = useCallback((message, severity) => {\n    if (notification !== null && notification !== void 0 && notification.showNotification) {\n      notification.showNotification(message, severity);\n    } else {\n      console.log(`${severity}: ${message}`);\n    }\n  }, [notification]);\n  const loadUser = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setUser(null);\n        setLoading(false);\n        return;\n      }\n      const response = await api.get('/auth/me', {\n        timeout: 5000 // Set timeout to 5 seconds\n      });\n      setUser(response.data);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Load user error:', (error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n      localStorage.removeItem('token');\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const decoded = jwtDecode(token);\n          if (decoded.exp * 1000 < Date.now()) {\n            localStorage.removeItem('token');\n            setUser(null);\n          } else {\n            await loadUser();\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        localStorage.removeItem('token');\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, [loadUser]);\n  const register = useCallback(async userData => {\n    try {\n      const res = await api.post('/auth/register', userData);\n      if (res.data.token) {\n        localStorage.setItem('token', res.data.token);\n        setUser(res.data.user);\n        showNotification('Registration successful!', 'success');\n        return res.data;\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n  const login = useCallback(async (fullName, password) => {\n    try {\n      const res = await api.post('/auth/login', {\n        fullName,\n        password\n      });\n      if (!res.data || !res.data.token) {\n        throw new Error('Invalid response from server');\n      }\n      localStorage.setItem('token', res.data.token);\n      setUser(res.data.user);\n      showNotification('Login successful!', 'success');\n      return res.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || error.message || 'Login failed';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setUser(null);\n    showNotification('Logged out successfully', 'success');\n  }, [showNotification]);\n  const updateProfile = useCallback(async userData => {\n    try {\n      const res = await api.put('/users/profile', userData);\n      setUser(res.data);\n      showNotification('Profile updated successfully', 'success');\n      return res.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Profile update failed';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n  const verifyEmail = useCallback(async token => {\n    try {\n      const res = await api.post('/auth/verify-email', {\n        token\n      });\n      showNotification('Email verified successfully', 'success');\n      return res.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      const message = ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || 'Email verification failed';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n  const forgotPassword = useCallback(async email => {\n    try {\n      await api.post('/auth/forgot-password', {\n        email\n      });\n      showNotification('Password reset email sent', 'success');\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      const message = ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || 'Failed to send reset email';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n  const resetPassword = useCallback(async (token, password) => {\n    try {\n      await api.post('/auth/reset-password', {\n        token,\n        password\n      });\n      showNotification('Password reset successful', 'success');\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      const message = ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.error) || 'Password reset failed';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n  const contextValue = useMemo(() => ({\n    user,\n    loading,\n    register,\n    login,\n    logout,\n    updateProfile,\n    verifyEmail,\n    forgotPassword,\n    resetPassword\n  }), [user, loading, register, login, logout, updateProfile, verifyEmail, forgotPassword, resetPassword]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"2tnh1gdL8nvq04GJcpBmsBuqOjc=\", false, function () {\n  return [useNotification];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useState","useContext","useEffect","useCallback","useMemo","jwtDecode","api","useNotification","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","notification","showNotification","message","severity","console","log","loadUser","token","localStorage","getItem","response","get","timeout","data","error","_error$response","_error$response$data","removeItem","initializeAuth","decoded","exp","Date","now","register","userData","res","post","setItem","_error$response2","_error$response2$data","Error","login","fullName","password","_error$response3","_error$response3$data","logout","updateProfile","put","_error$response4","_error$response4$data","verifyEmail","_error$response5","_error$response5$data","forgotPassword","email","_error$response6","_error$response6$data","resetPassword","_error$response7","_error$response7$data","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/Lenovo/socialrisex-main/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useContext, useEffect, useCallback, useMemo } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport api from '../utils/api';\nimport { useNotification } from './NotificationContext';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const notification = useNotification();\n\n  const showNotification = useCallback((message, severity) => {\n    if (notification?.showNotification) {\n      notification.showNotification(message, severity);\n    } else {\n      console.log(`${severity}: ${message}`);\n    }\n  }, [notification]);\n  const loadUser = useCallback(async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setUser(null);\n        setLoading(false);\n        return;\n      }\n\n      const response = await api.get('/auth/me', {\n        timeout: 5000 // Set timeout to 5 seconds\n      });\n      \n      setUser(response.data);\n    } catch (error) {\n      console.error('Load user error:', error?.response?.data?.message || error.message);\n      localStorage.removeItem('token');\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const decoded = jwtDecode(token);\n          if (decoded.exp * 1000 < Date.now()) {\n            localStorage.removeItem('token');\n            setUser(null);\n          } else {\n            await loadUser();\n          }\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        localStorage.removeItem('token');\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, [loadUser]);\n\n  const register = useCallback(async (userData) => {\n    try {\n      const res = await api.post('/auth/register', userData);\n      if (res.data.token) {\n        localStorage.setItem('token', res.data.token);\n        setUser(res.data.user);\n        showNotification('Registration successful!', 'success');\n        return res.data;\n      }\n    } catch (error) {\n      const message = error.response?.data?.error || 'Registration failed';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n\n  const login = useCallback(async (fullName, password) => {\n    try {\n      const res = await api.post('/auth/login', { fullName, password });\n      \n      if (!res.data || !res.data.token) {\n        throw new Error('Invalid response from server');\n      }\n\n      localStorage.setItem('token', res.data.token);\n      setUser(res.data.user);\n      showNotification('Login successful!', 'success');\n      return res.data;\n    } catch (error) {\n      const message = error.response?.data?.message || error.message || 'Login failed';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n\n  const logout = useCallback(() => {\n    localStorage.removeItem('token');\n    setUser(null);\n    showNotification('Logged out successfully', 'success');\n  }, [showNotification]);\n\n  const updateProfile = useCallback(async (userData) => {\n    try {\n      const res = await api.put('/users/profile', userData);\n      setUser(res.data);\n      showNotification('Profile updated successfully', 'success');\n      return res.data;\n    } catch (error) {\n      const message = error.response?.data?.error || 'Profile update failed';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n\n  const verifyEmail = useCallback(async (token) => {\n    try {\n      const res = await api.post('/auth/verify-email', { token });\n      showNotification('Email verified successfully', 'success');\n      return res.data;\n    } catch (error) {\n      const message = error.response?.data?.error || 'Email verification failed';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n\n  const forgotPassword = useCallback(async (email) => {\n    try {\n      await api.post('/auth/forgot-password', { email });\n      showNotification('Password reset email sent', 'success');\n    } catch (error) {\n      const message = error.response?.data?.error || 'Failed to send reset email';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n\n  const resetPassword = useCallback(async (token, password) => {\n    try {\n      await api.post('/auth/reset-password', { token, password });\n      showNotification('Password reset successful', 'success');\n    } catch (error) {\n      const message = error.response?.data?.error || 'Password reset failed';\n      showNotification(message, 'error');\n      throw new Error(message);\n    }\n  }, [showNotification]);\n\n  const contextValue = useMemo(() => ({\n    user,\n    loading,\n    register,\n    login,\n    logout,\n    updateProfile,\n    verifyEmail,\n    forgotPassword,\n    resetPassword\n  }), [\n    user,\n    loading,\n    register,\n    login,\n    logout,\n    updateProfile,\n    verifyEmail,\n    forgotPassword,\n    resetPassword\n  ]);\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}